<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <CustomReferenceLineTooltips />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='lupita-data-dummy' inline='true' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='lupita-data-dummy' name='textscan.0sc3c9a0hdv8vv1cg26a41yg6yce'>
            <connection class='textscan' directory='C:/Users/nickd/Dev/CS3DV20-Coursework-1/data' filename='lupita-data-dummy.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0sc3c9a0hdv8vv1cg26a41yg6yce' name='lupita-data-dummy.csv' table='[lupita-data-dummy#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='Market Size' ordinal='3' />
            <column datatype='string' name='Product' ordinal='4' />
            <column datatype='string' name='City' ordinal='5' />
            <column datatype='string' name='Product Line' ordinal='6' />
            <column datatype='string' name='Product Type' ordinal='7' />
            <column datatype='string' name='Type' ordinal='8' />
            <column datatype='integer' name='Budget COGS' ordinal='9' />
            <column datatype='integer' name='Budget Margin' ordinal='10' />
            <column datatype='integer' name='Budget Profit' ordinal='11' />
            <column datatype='integer' name='Budget Sales' ordinal='12' />
            <column datatype='integer' name='COGS' ordinal='13' />
            <column datatype='integer' name='Inventory' ordinal='14' />
            <column datatype='integer' name='Marketing' ordinal='15' />
            <column datatype='integer' name='Sales' ordinal='16' />
            <column datatype='integer' name='Total Expenses' ordinal='17' />
            <column datatype='string' name='Inv2' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0sc3c9a0hdv8vv1cg26a41yg6yce' name='lupita-data-dummy.csv' table='[lupita-data-dummy#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='Market Size' ordinal='3' />
            <column datatype='string' name='Product' ordinal='4' />
            <column datatype='string' name='City' ordinal='5' />
            <column datatype='string' name='Product Line' ordinal='6' />
            <column datatype='string' name='Product Type' ordinal='7' />
            <column datatype='string' name='Type' ordinal='8' />
            <column datatype='integer' name='Budget COGS' ordinal='9' />
            <column datatype='integer' name='Budget Margin' ordinal='10' />
            <column datatype='integer' name='Budget Profit' ordinal='11' />
            <column datatype='integer' name='Budget Sales' ordinal='12' />
            <column datatype='integer' name='COGS' ordinal='13' />
            <column datatype='integer' name='Inventory' ordinal='14' />
            <column datatype='integer' name='Marketing' ordinal='15' />
            <column datatype='integer' name='Sales' ordinal='16' />
            <column datatype='integer' name='Total Expenses' ordinal='17' />
            <column datatype='string' name='Inv2' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market Size</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Market Size]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Market Size</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Line</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Line]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Product Line</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget COGS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget COGS]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Budget COGS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Margin</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget Margin]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Budget Margin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget Profit]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Budget Profit</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Budget Sales]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Budget Sales</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COGS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COGS]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>COGS</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inventory</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Inventory]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Inventory</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Marketing]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Marketing</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inv2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Inv2]</local-name>
            <parent-name>[lupita-data-dummy.csv]</parent-name>
            <remote-alias>Inv2</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Budget COGS]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Budget Margin]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Budget Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Budget Sales]' role='measure' type='quantitative' />
      <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
      <column caption='Margin' datatype='integer' name='[Calculation_1403786087613337600]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]-[COGS]' />
      </column>
      <column caption='Profit' datatype='integer' name='[Calculation_1403786087613509633]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]-[COGS]-[Total Expenses]' />
      </column>
      <column caption='Budget Additional Expenses' datatype='integer' name='[Calculation_1403786087613743106]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Budget Margin]-[Budget Profit]' />
      </column>
      <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
      </column>
      <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
      </column>
      <column caption='Budget COGS Performance' datatype='real' name='[Calculation_1958432529583575041]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[COGS]/[Budget COGS]' />
      </column>
      <column caption='Budget Profit Performance' datatype='real' name='[Calculation_1958432529584398338]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1403786087613509633]/[Budget Profit]' />
      </column>
      <column caption='Budget Margin Performance' datatype='real' name='[Calculation_1958432529587843075]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1403786087613337600]/[Budget Margin]' />
      </column>
      <column caption='Budget Additional Expenses Performance' datatype='real' name='[Calculation_1958432529588158468]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total Expenses]/[Calculation_1403786087613743106]' />
      </column>
      <column caption='Budget Sales Performance' datatype='real' name='[Calculation_3349552233608519680]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]/[Budget Sales]' />
      </column>
      <column caption='Overall Budget Performance' datatype='real' name='[Calculation_3349552233617027073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([COGS]+[Calculation_1403786087613509633]+[Calculation_1403786087613337600]+[Total Expenses])/ ([Budget COGS]+[Budget Profit] + [Budget Margin] + [Calculation_1403786087613743106])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Inventory]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
      <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
      <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
      <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='lupita-data-dummy.csv' datatype='table' name='[__tableau_internal_object_id__].[lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1403786087613509633]' derivation='Attribute' name='[attr:Calculation_1403786087613509633:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1606659177409134593]' derivation='Attribute' name='[attr:Calculation_1606659177409134593:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget COGS]' derivation='Avg' name='[avg:Budget COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Profit]' derivation='Avg' name='[avg:Budget Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Sales]' derivation='Avg' name='[avg:Budget Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[COGS]' derivation='Avg' name='[avg:COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1403786087613509633]' derivation='Avg' name='[avg:Calculation_1403786087613509633:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1958432529583575041]' derivation='Avg' name='[avg:Calculation_1958432529583575041:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1958432529584398338]' derivation='Avg' name='[avg:Calculation_1958432529584398338:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1958432529587843075]' derivation='Avg' name='[avg:Calculation_1958432529587843075:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1958432529588158468]' derivation='Avg' name='[avg:Calculation_1958432529588158468:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3349552233608519680]' derivation='Avg' name='[avg:Calculation_3349552233608519680:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inventory]' derivation='Avg' name='[avg:Inventory:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1403786087613509633]' derivation='Median' name='[med:Calculation_1403786087613509633:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1403786087613509633]' derivation='None' name='[none:Calculation_1403786087613509633:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1606659177409134593]' derivation='None' name='[none:Calculation_1606659177409134593:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1606659177412800514]' derivation='None' name='[none:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1403786087613509633]' derivation='Stdev' name='[std:Calculation_1403786087613509633:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget COGS]' derivation='Sum' name='[sum:Budget COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Margin]' derivation='Sum' name='[sum:Budget Margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Profit]' derivation='Sum' name='[sum:Budget Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Budget Sales]' derivation='Sum' name='[sum:Budget Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[COGS]' derivation='Sum' name='[sum:COGS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1403786087613509633]' derivation='Sum' name='[sum:Calculation_1403786087613509633:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1606659177409134593]' derivation='Sum' name='[sum:Calculation_1606659177409134593:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1606659177412800514]' derivation='Sum' name='[sum:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1958432529583575041]' derivation='Sum' name='[sum:Calculation_1958432529583575041:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1958432529584398338]' derivation='Sum' name='[sum:Calculation_1958432529584398338:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1958432529587843075]' derivation='Sum' name='[sum:Calculation_1958432529587843075:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1958432529588158468]' derivation='Sum' name='[sum:Calculation_1958432529588158468:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_3349552233608519680]' derivation='Sum' name='[sum:Calculation_3349552233608519680:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Inventory]' derivation='Sum' name='[sum:Inventory:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:qk]' pivot='key' type='quantitative' />
      <group caption='Action (City,Product Type,Product Name,State)' hidden='true' name='[Action (City,Product Type,Product Name,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Product Type]' />
          <groupfilter function='level-members' level='[Product]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date),State)' hidden='true' name='[Action (MONTH(Date),State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Date:ok]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Name)' hidden='true' name='[Action (Product Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Type)' hidden='true' name='[Action (Product Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Type]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Type,State)' hidden='true' name='[Action (Product Type,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Type]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Product Type and Brew' name='[Product Line, Product Type, Product Name and 1 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Type]' />
          <groupfilter function='level-members' level='[Type]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Product'>
          <field>[Product Line]</field>
          <field>[Product]</field>
          <field>[Product Type]</field>
          <field>[Type]</field>
        </drill-path>
        <drill-path name='State, City'>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Clydach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glasgow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cumbernauld&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rhondda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Briton Ferry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leeds&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liverpool&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swansea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dundee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cardiff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Basingstoke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edinburgh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529583575041:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529587843075:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1958432529583575041:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1958432529587843075:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1958432529588158468:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:COGS:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Total Expenses:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Budget Profit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_3349552233608519680:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_3349552233608519680:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[attr:Calculation_1606659177409134593:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Budget COGS:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Budget Sales:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529584398338:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529587843075:qk]:1&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Calculation_1606659177409134593:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Budget COGS:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Budget Margin:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Budget Profit:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Budget Sales:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1606659177409134593:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1958432529584398338:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Inventory:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Inventory:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[attr:Calculation_1403786087613509633:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1403786087613509633:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:COGS:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[med:Calculation_1403786087613509633:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Calculation_1403786087613509633:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Calculation_1606659177412800514:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[std:Calculation_1403786087613509633:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1606659177412800514:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Market Size' />
        <field-sort-custom-order field='Product' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Product Line' />
        <field-sort-custom-order field='Product Type' />
        <field-sort-custom-order field='Type' />
        <field-sort-custom-order field='Budget COGS' />
        <field-sort-custom-order field='Calculation_1958432529583575041' />
        <field-sort-custom-order field='Budget Margin' />
        <field-sort-custom-order field='Calculation_1958432529587843075' />
        <field-sort-custom-order field='Budget Profit' />
        <field-sort-custom-order field='Calculation_1958432529584398338' />
        <field-sort-custom-order field='Budget Sales' />
        <field-sort-custom-order field='Calculation_3349552233608519680' />
        <field-sort-custom-order field='Calculation_3349552233617027073' />
        <field-sort-custom-order field='COGS' />
        <field-sort-custom-order field='Inventory' />
        <field-sort-custom-order field='Marketing' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Total Expenses' />
        <field-sort-custom-order field='Calculation_1403786087613337600' />
        <field-sort-custom-order field='Calculation_1403786087613509633' />
        <field-sort-custom-order field='Calculation_1403786087613743106' />
        <field-sort-custom-order field='Calculation_1958432529588158468' />
        <field-sort-custom-order field='Calculation_1606659177409134593' />
        <field-sort-custom-order field='Calculation_1606659177412800514' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='lupita-data-dummy.csv' id='lupita-data-dummy.csv_7F1570FF19B8445F975CFB93F5F8496A'>
            <properties context=''>
              <relation connection='textscan.0sc3c9a0hdv8vv1cg26a41yg6yce' name='lupita-data-dummy.csv' table='[lupita-data-dummy#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='string' name='Market Size' ordinal='3' />
                  <column datatype='string' name='Product' ordinal='4' />
                  <column datatype='string' name='City' ordinal='5' />
                  <column datatype='string' name='Product Line' ordinal='6' />
                  <column datatype='string' name='Product Type' ordinal='7' />
                  <column datatype='string' name='Type' ordinal='8' />
                  <column datatype='integer' name='Budget COGS' ordinal='9' />
                  <column datatype='integer' name='Budget Margin' ordinal='10' />
                  <column datatype='integer' name='Budget Profit' ordinal='11' />
                  <column datatype='integer' name='Budget Sales' ordinal='12' />
                  <column datatype='integer' name='COGS' ordinal='13' />
                  <column datatype='integer' name='Inventory' ordinal='14' />
                  <column datatype='integer' name='Marketing' ordinal='15' />
                  <column datatype='integer' name='Sales' ordinal='16' />
                  <column datatype='integer' name='Total Expenses' ordinal='17' />
                  <column datatype='string' name='Inv2' ordinal='18' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
      <datasources>
        <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
      </datasources>
      <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
        <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]'>
        <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Product Type]' />
          <groupfilter function='level-members' level='[Type]' />
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' included-values='in-range'>
        <min>-94.642612721189138</min>
        <max>309.49303685881767</max>
      </filter>
      <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Market Size:nk]' member='&quot;Major Market&quot;' />
          <groupfilter function='member' level='[none:Market Size:nk]' member='&quot;Small Market&quot;' />
        </groupfilter>
        <target field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]'>
        <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]'>
        <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 10 (generated)' name='[Action10_54D060CF6F0B4FE0B458B45F1A584CF2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Managerial' type='sheet' worksheet='Profit per Product Name with Marketing spendings' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Managerial' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action11_1B4DC173D5B54D7DB17A30ACC4456D91]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Managerial' type='sheet' worksheet='Profit change' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Managerial' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action11_B471C33EECB74B1BB82A9A68A58C2686]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='C-Level' type='sheet' worksheet='Profit per Product Type with Marketing spendings' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='C-Level' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action12_85D7440A432B4937A67E725B538FCE8C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='C-Level' type='sheet' worksheet='Profit change' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='C-Level' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1_5E80DF32AB1944AEBC940EB52D155E7D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='C-Level' type='sheet' worksheet='ROI per Type and total Expenses' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='C-Level' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_4307149F7DBF47D8B1901FE69A00375A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='C-Level' type='sheet' worksheet='Performance Index' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='C-Level' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_A81E267B42374AF190816147FC855466]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='C-Level' type='sheet' worksheet='Sales / Marketing' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='C-Level' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_AA9E8973E54449A6B3BA6A5407B1E1FD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='C-Level' type='sheet' worksheet='State analysis ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='C-Level' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_D6590E8F5EC8477B834C85A1EC924151]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Managerial' type='sheet' worksheet='ROI per Product' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Managerial' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_FFE66B1D4FA947BEAA081C08F415F404]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Managerial' type='sheet' worksheet='Performance Index M' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Managerial' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_01077F9EFB9844288FFCADE85D417650]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Managerial' type='sheet' worksheet='City analysis' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Managerial' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_46DD77A8D40047A8B7D1D7C0C69618CF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Managerial' type='sheet' worksheet='Sales / Marketing M' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Managerial' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Budget  performance per state'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column datatype='integer' name='[Budget COGS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Profit]' role='measure' type='quantitative' />
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Margin' datatype='integer' name='[Calculation_1403786087613337600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]' />
            </column>
            <column caption='Profit' datatype='integer' name='[Calculation_1403786087613509633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]-[Total Expenses]' />
            </column>
            <column caption='Budget Additional Expenses' datatype='integer' name='[Calculation_1403786087613743106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Budget Margin]-[Budget Profit]' />
            </column>
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column caption='Overall Budget Performance' datatype='real' name='[Calculation_3349552233617027073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([COGS]+[Calculation_1403786087613509633]+[Calculation_1403786087613337600]+[Total Expenses])/ ([Budget COGS]+[Budget Profit] + [Budget Margin] + [Calculation_1403786087613743106])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3349552233617027073]' derivation='Avg' name='[avg:Calculation_3349552233617027073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_3349552233617027073:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label-type='automatic' scope='per-pane' value='1.0' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_3349552233617027073:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_3349552233617027073:qk]</cols>
      </table>
      <simple-id uuid='{3A8C83E0-E2E2-4FF6-BCB3-0EC7708C7CE2}' />
    </worksheet>
    <worksheet name='Budget per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column datatype='integer' name='[Budget COGS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Profit]' role='measure' type='quantitative' />
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='integer' name='[Calculation_1403786087613509633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]-[Total Expenses]' />
            </column>
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column caption='Budget COGS Performance' datatype='real' name='[Calculation_1958432529583575041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[COGS]/[Budget COGS]' />
            </column>
            <column caption='Budget Profit Performance' datatype='real' name='[Calculation_1958432529584398338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1403786087613509633]/[Budget Profit]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529583575041]' derivation='Avg' name='[avg:Calculation_1958432529583575041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529584398338]' derivation='Avg' name='[avg:Calculation_1958432529584398338:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529583575041:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='none' scope='per-pane' tooltip-type='none' value='1.0' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529583575041:qk]' z-order='1' />
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529584398338:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='none' scope='per-pane' value='1.0' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529584398338:qk]' z-order='2' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529584398338:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529583575041:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</rows>
        <cols>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529584398338:qk] + [federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529583575041:qk])</cols>
      </table>
      <simple-id uuid='{71CAEEB4-38A1-4FC7-9944-5E62B5888A70}' />
    </worksheet>
    <worksheet name='Budget per State (detailed)'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column datatype='integer' name='[Budget Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Sales]' role='measure' type='quantitative' />
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Margin' datatype='integer' name='[Calculation_1403786087613337600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]' />
            </column>
            <column caption='Budget Additional Expenses' datatype='integer' name='[Calculation_1403786087613743106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Budget Margin]-[Budget Profit]' />
            </column>
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column caption='Budget Margin Performance' datatype='real' name='[Calculation_1958432529587843075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1403786087613337600]/[Budget Margin]' />
            </column>
            <column caption='Budget Additional Expenses Performance' datatype='real' name='[Calculation_1958432529588158468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]/[Calculation_1403786087613743106]' />
            </column>
            <column caption='Budget Sales Performance' datatype='real' name='[Calculation_3349552233608519680]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]/[Budget Sales]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529587843075]' derivation='Avg' name='[avg:Calculation_1958432529587843075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529588158468]' derivation='Avg' name='[avg:Calculation_1958432529588158468:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3349552233608519680]' derivation='Avg' name='[avg:Calculation_3349552233608519680:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529587843075:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='none' scope='per-pane' value='1.0' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529587843075:qk]' z-order='1' />
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='none' scope='per-pane' value='1.0' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk]' z-order='2' />
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_3349552233608519680:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' scope='per-pane' value='1.0' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_3349552233608519680:qk]' z-order='3' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529587843075:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_3349552233608519680:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</rows>
        <cols>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529587843075:qk] + ([federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk] + [federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_3349552233608519680:qk]))</cols>
      </table>
      <simple-id uuid='{BAA2218D-64AA-4C8E-8B36-946F4B8A569F}' />
    </worksheet>
    <worksheet name='City analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column caption='SUM([Sale Expenses])+SUM([Marketing])' datatype='integer' name='[Calculation_1606659177431011334]' role='measure' type='quantitative' user:unnamed='book-2'>
              <calculation class='tableau' formula='SUM([Calculation_1606659177409134593])+SUM([Marketing])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1606659177431011334]' derivation='User' name='[usr:Calculation_1606659177431011334:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (City,Product Type,Product Name,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_D6590E8F5EC8477B834C85A1EC924151]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Product Type]' />
              <groupfilter function='level-members' level='[Product]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_1B4DC173D5B54D7DB17A30ACC4456D91]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action10_54D060CF6F0B4FE0B458B45F1A584CF2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (City,Product Type,Product Name,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Longitude (generated)]' field-type='quantitative' max='112009.28600698966' min='-870395.66651300492' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Latitude (generated)]' field-type='quantitative' max='7968047.0712344497' min='6361309.9971669484' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' center='12.0' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' value='Total Expenses&#10;'>
              <formatted-text>
                <run>Total Expenses&#10;</run>
              </formatted-text>
            </format>
            <format attr='size' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' value='Average ROI'>
              <formatted-text>
                <run>Average ROI</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]' />
              <lod column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:City:nk]' />
              <size column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' />
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.86756908893585205' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Latitude (generated)]</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B5D627E0-47BD-43D9-A169-56350112A18E}' />
    </worksheet>
    <worksheet name='Performance Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column datatype='integer' name='[Budget COGS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Profit]' role='measure' type='quantitative' />
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='integer' name='[Calculation_1403786087613509633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]-[Total Expenses]' />
            </column>
            <column caption='Budget Additional Expenses' datatype='integer' name='[Calculation_1403786087613743106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Budget Margin]-[Budget Profit]' />
            </column>
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column caption='Budget COGS Performance' datatype='real' name='[Calculation_1958432529583575041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[COGS]/[Budget COGS]' />
            </column>
            <column caption='Budget Profit Performance' datatype='real' name='[Calculation_1958432529584398338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1403786087613509633]/[Budget Profit]' />
            </column>
            <column caption='Budget Additional Expenses Performance' datatype='real' name='[Calculation_1958432529588158468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]/[Calculation_1403786087613743106]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529583575041]' derivation='Avg' name='[avg:Calculation_1958432529583575041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529584398338]' derivation='Avg' name='[avg:Calculation_1958432529584398338:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529588158468]' derivation='Avg' name='[avg:Calculation_1958432529588158468:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_85D7440A432B4937A67E725B538FCE8C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action2_16274917CE4441F1BD92CAA417CC5235]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type)]'>
            <groupfilter function='level-members' level='[Product Type]' user:ui-action-filter='[Action11_B471C33EECB74B1BB82A9A68A58C2686]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_5E80DF32AB1944AEBC940EB52D155E7D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Type]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action5_AA9E8973E54449A6B3BA6A5407B1E1FD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529583575041:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529584398338:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529583575041:qk] + ([federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529584398338:qk] + [federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk]))</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{C71EFAD5-9BC4-45F4-ACDD-34233A574293}' />
    </worksheet>
    <worksheet name='Performance Index M'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Budgeting Performance Index</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column datatype='integer' name='[Budget COGS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Sales]' role='measure' type='quantitative' />
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Margin' datatype='integer' name='[Calculation_1403786087613337600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]' />
            </column>
            <column caption='Profit' datatype='integer' name='[Calculation_1403786087613509633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]-[Total Expenses]' />
            </column>
            <column caption='Budget Additional Expenses' datatype='integer' name='[Calculation_1403786087613743106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Budget Margin]-[Budget Profit]' />
            </column>
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column caption='Budget COGS Performance' datatype='real' name='[Calculation_1958432529583575041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[COGS]/[Budget COGS]' />
            </column>
            <column caption='Budget Profit Performance' datatype='real' name='[Calculation_1958432529584398338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1403786087613509633]/[Budget Profit]' />
            </column>
            <column caption='Budget Margin Performance' datatype='real' name='[Calculation_1958432529587843075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1403786087613337600]/[Budget Margin]' />
            </column>
            <column caption='Budget Additional Expenses Performance' datatype='real' name='[Calculation_1958432529588158468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]/[Calculation_1403786087613743106]' />
            </column>
            <column caption='Budget Sales Performance' datatype='real' name='[Calculation_3349552233608519680]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]/[Budget Sales]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529583575041]' derivation='Avg' name='[avg:Calculation_1958432529583575041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529584398338]' derivation='Avg' name='[avg:Calculation_1958432529584398338:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529587843075]' derivation='Avg' name='[avg:Calculation_1958432529587843075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529588158468]' derivation='Avg' name='[avg:Calculation_1958432529588158468:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3349552233608519680]' derivation='Avg' name='[avg:Calculation_3349552233608519680:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (City,Product Type,Product Name,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_D6590E8F5EC8477B834C85A1EC924151]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Product Type]' />
              <groupfilter function='level-members' level='[Product]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_1B4DC173D5B54D7DB17A30ACC4456D91]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action10_54D060CF6F0B4FE0B458B45F1A584CF2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk]' included-values='in-range' />
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (City,Product Type,Product Name,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529583575041:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529584398338:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529587843075:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_3349552233608519680:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529583575041:qk] + ([federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529584398338:qk] + ([federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529587843075:qk] + ([federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk] + [federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_3349552233608519680:qk]))))</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{AED2C654-FF6A-485E-B75D-508E31226BEA}' />
    </worksheet>
    <worksheet name='Profit change'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; over the years&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='integer' name='[Calculation_1403786087613509633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]-[Total Expenses]' />
            </column>
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1403786087613509633]' derivation='Sum' name='[sum:Calculation_1403786087613509633:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (City,Product Type,Product Name,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_D6590E8F5EC8477B834C85A1EC924151]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Product Type]' />
              <groupfilter function='level-members' level='[Product]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action10_54D060CF6F0B4FE0B458B45F1A584CF2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type)]'>
            <groupfilter function='level-members' level='[Product Type]' user:ui-action-filter='[Action11_B471C33EECB74B1BB82A9A68A58C2686]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_5E80DF32AB1944AEBC940EB52D155E7D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Type]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action5_AA9E8973E54449A6B3BA6A5407B1E1FD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (City,Product Type,Product Name,State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]' value='68' />
            <format attr='height' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[mn:Date:ok]' value='101' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{F3A74D02-6163-4409-9CC9-2962D947641B}' />
    </worksheet>
    <worksheet name='Profit per Product'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='integer' name='[Calculation_1403786087613509633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]-[Total Expenses]' />
            </column>
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1403786087613509633]' derivation='Sum' name='[sum:Calculation_1403786087613509633:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' z-order='2' />
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product:nk]</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]</cols>
      </table>
      <simple-id uuid='{A14DBAF4-F1DF-4FB0-A1D4-64E125748A8F}' />
    </worksheet>
    <worksheet name='Profit per Product Name with Marketing spendings'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='integer' name='[Calculation_1403786087613509633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]-[Total Expenses]' />
            </column>
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1403786087613509633]' derivation='Sum' name='[sum:Calculation_1403786087613509633:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (City,Product Type,Product Name,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_D6590E8F5EC8477B834C85A1EC924151]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Product Type]' />
              <groupfilter function='level-members' level='[Product]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_1B4DC173D5B54D7DB17A30ACC4456D91]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_5E80DF32AB1944AEBC940EB52D155E7D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Type]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (City,Product Type,Product Name,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]' />
              <lod column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' z-order='2' />
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product:nk] / [federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product Type:nk])</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]</cols>
      </table>
      <simple-id uuid='{05B58D38-0C7F-4E8A-8E79-857F855FAB21}' />
    </worksheet>
    <worksheet name='Profit per Product Type with Marketing spendings'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='integer' name='[Calculation_1403786087613509633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]-[Total Expenses]' />
            </column>
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1403786087613509633]' derivation='Sum' name='[sum:Calculation_1403786087613509633:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_1B4DC173D5B54D7DB17A30ACC4456D91]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_5E80DF32AB1944AEBC940EB52D155E7D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Type]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action5_AA9E8973E54449A6B3BA6A5407B1E1FD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]' />
              <lod column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' z-order='2' />
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product Type:nk]</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]</cols>
      </table>
      <simple-id uuid='{CBAD2071-51B9-4BD7-B4C3-815488D9BAF6}' />
    </worksheet>
    <worksheet name='ROI per Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; and Total Expenses</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column caption='SUM([Sale Expenses])+SUM([Marketing])' datatype='integer' name='[Calculation_1606659177431011334]' role='measure' type='quantitative' user:unnamed='book-2'>
              <calculation class='tableau' formula='SUM([Calculation_1606659177409134593])+SUM([Marketing])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1606659177431011334]' derivation='User' name='[usr:Calculation_1606659177431011334:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action11_1B4DC173D5B54D7DB17A30ACC4456D91]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action10_54D060CF6F0B4FE0B458B45F1A584CF2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:City:nk]'>
            <groupfilter from='&quot;Aberdeen&quot;' function='range' level='[none:City:nk]' to='&quot;Swansea&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:City:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' center='12.0' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' num-steps='8' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' />
              <text column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk] / [federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:City:nk])</rows>
        <cols>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product:nk] / [federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product Type:nk])</cols>
      </table>
      <simple-id uuid='{44905206-6EA8-413B-8E5B-561FEDE9CEE4}' />
    </worksheet>
    <worksheet name='ROI per Type and total Expenses'>
      <layout-options>
        <title>
          <formatted-text>
            <run>ROI per Type and Total Expenses
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column caption='SUM([Sale Expenses])+SUM([Marketing])' datatype='integer' name='[Calculation_1606659177431011334]' role='measure' type='quantitative' user:unnamed='book-2'>
              <calculation class='tableau' formula='SUM([Calculation_1606659177409134593])+SUM([Marketing])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1606659177431011334]' derivation='User' name='[usr:Calculation_1606659177431011334:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_85D7440A432B4937A67E725B538FCE8C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action2_16274917CE4441F1BD92CAA417CC5235]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type)]'>
            <groupfilter function='level-members' level='[Product Type]' user:ui-action-filter='[Action11_B471C33EECB74B1BB82A9A68A58C2686]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action5_AA9E8973E54449A6B3BA6A5407B1E1FD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' center='12.0' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' num-steps='6' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' />
              <text column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product Type:nk]</cols>
      </table>
      <simple-id uuid='{777982CD-8382-4F6E-8C72-2DBB6BA38DB8}' />
    </worksheet>
    <worksheet name='Sale Expenses per Product'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1606659177409134593]' derivation='Sum' name='[sum:Calculation_1606659177409134593:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1606659177409134593:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1606659177409134593:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk] / [federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:City:nk])</rows>
        <cols>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product:nk] / [federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product Type:nk])</cols>
      </table>
      <simple-id uuid='{B76686E7-1E3C-4881-B6EC-8E54D37843C6}' />
    </worksheet>
    <worksheet name='Sales / Marketing'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; quarterly &#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Quarter-Trunc' name='[tqr:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_85D7440A432B4937A67E725B538FCE8C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action2_16274917CE4441F1BD92CAA417CC5235]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type)]'>
            <groupfilter function='level-members' level='[Product Type]' user:ui-action-filter='[Action11_B471C33EECB74B1BB82A9A68A58C2686]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_5E80DF32AB1944AEBC940EB52D155E7D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Type]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action5_AA9E8973E54449A6B3BA6A5407B1E1FD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk] + [federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk])</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[tqr:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>The only exception</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[tqr:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]</field>
                      <field>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[tqr:Date:qk]</field>
                      <field>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>114489</value>
                    <value>#2019-01-01 00:00:00#</value>
                    <value>&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='62' y='80' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{597BD9B8-F312-4278-9201-93E9FF2E7BC1}' />
    </worksheet>
    <worksheet name='Sales / Marketing M'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales / Marketing monthly </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (City,Product Type,Product Name,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_D6590E8F5EC8477B834C85A1EC924151]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Product Type]' />
              <groupfilter function='level-members' level='[Product]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action10_54D060CF6F0B4FE0B458B45F1A584CF2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (City,Product Type,Product Name,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk] + [federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk])</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{DAF280EF-3BF8-448F-B334-8719DAE93022}' />
    </worksheet>
    <worksheet name='State analysis '>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column caption='SUM([Sale Expenses])+SUM([Marketing])' datatype='integer' name='[Calculation_1606659177431011334]' role='measure' type='quantitative' user:unnamed='book-2'>
              <calculation class='tableau' formula='SUM([Calculation_1606659177409134593])+SUM([Marketing])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1606659177431011334]' derivation='User' name='[usr:Calculation_1606659177431011334:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_85D7440A432B4937A67E725B538FCE8C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:Date:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]'>
            <groupfilter function='level-members' level='[Product]' user:ui-action-filter='[Action2_16274917CE4441F1BD92CAA417CC5235]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type)]'>
            <groupfilter function='level-members' level='[Product Type]' user:ui-action-filter='[Action11_B471C33EECB74B1BB82A9A68A58C2686]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_5E80DF32AB1944AEBC940EB52D155E7D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Type]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Name)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type,State)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (Product Type)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Action (MONTH(Date),State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Longitude (generated)]' field-type='quantitative' max='166095.48351194861' min='-957016.12246057601' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Latitude (generated)]' field-type='quantitative' max='7605028.8302402068' min='6676998.669742669' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' center='12.0' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' value='Total expenses&#10;'>
              <formatted-text>
                <run>Total expenses&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]' />
              <size column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' />
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Latitude (generated)]</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{95A126E6-3D56-4E59-B197-D77D352798D0}' />
    </worksheet>
    <worksheet name='book-14'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='integer' name='[Calculation_1403786087613509633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]-[Total Expenses]' />
            </column>
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Line]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Line]' derivation='None' name='[none:Product Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1403786087613509633]' derivation='Sum' name='[sum:Calculation_1403786087613509633:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Marketing]' derivation='Sum' name='[sum:Marketing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]' />
              <lod column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' z-order='2' />
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Sales:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product Line:nk]</rows>
        <cols>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1403786087613509633:qk]</cols>
      </table>
      <simple-id uuid='{34C3BB56-0192-48F8-847F-8BE898D808EB}' />
    </worksheet>
    <worksheet name='book-2'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column caption='SUM([Sale Expenses])+SUM([Marketing])' datatype='integer' name='[Calculation_1606659177431011334]' role='measure' type='quantitative' user:unnamed='book-2'>
              <calculation class='tableau' formula='SUM([Calculation_1606659177409134593])+SUM([Marketing])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column caption='Product Name' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1606659177431011334]' derivation='User' name='[usr:Calculation_1606659177431011334:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' />
              <text column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk] / [federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:City:nk])</rows>
        <cols>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product:nk] / [federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Product Type:nk])</cols>
      </table>
      <simple-id uuid='{8A487D68-8A2D-4F44-B2E2-24D8503ED02B}' />
    </worksheet>
    <worksheet name='book-8'>
      <table>
        <view>
          <datasources>
            <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
          </datasources>
          <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
            <column datatype='integer' name='[Budget COGS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Margin]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Budget Sales]' role='measure' type='quantitative' />
            <column caption='Cogs' datatype='integer' name='[COGS]' role='measure' type='quantitative' />
            <column caption='Margin' datatype='integer' name='[Calculation_1403786087613337600]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]' />
            </column>
            <column caption='Profit' datatype='integer' name='[Calculation_1403786087613509633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]-[COGS]-[Total Expenses]' />
            </column>
            <column caption='Budget Additional Expenses' datatype='integer' name='[Calculation_1403786087613743106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Budget Margin]-[Budget Profit]' />
            </column>
            <column caption='Sale Expenses' datatype='integer' name='[Calculation_1606659177409134593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]+[COGS]' />
            </column>
            <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
            </column>
            <column caption='Budget COGS Performance' datatype='real' name='[Calculation_1958432529583575041]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[COGS]/[Budget COGS]' />
            </column>
            <column caption='Budget Profit Performance' datatype='real' name='[Calculation_1958432529584398338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1403786087613509633]/[Budget Profit]' />
            </column>
            <column caption='Budget Margin Performance' datatype='real' name='[Calculation_1958432529587843075]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1403786087613337600]/[Budget Margin]' />
            </column>
            <column caption='Budget Additional Expenses Performance' datatype='real' name='[Calculation_1958432529588158468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Expenses]/[Calculation_1403786087613743106]' />
            </column>
            <column caption='Budget Sales Performance' datatype='real' name='[Calculation_3349552233608519680]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]/[Budget Sales]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Marketing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Additional Expenses' datatype='integer' name='[Total Expenses]' role='measure' type='quantitative' />
            <column caption='Brew Type' datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529583575041]' derivation='Avg' name='[avg:Calculation_1958432529583575041:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529584398338]' derivation='Avg' name='[avg:Calculation_1958432529584398338:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529587843075]' derivation='Avg' name='[avg:Calculation_1958432529587843075:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1958432529588158468]' derivation='Avg' name='[avg:Calculation_1958432529588158468:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3349552233608519680]' derivation='Avg' name='[avg:Calculation_3349552233608519680:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529588158468:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529583575041:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529587843075:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1958432529584398338:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_3349552233608519680:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]</column>
            <column>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' value='104' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Multiple Values]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-pane' value='1.0' value-column='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Multiple Values]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Multiple Values]</rows>
        <cols>([federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:City:nk] / [federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{496F3150-4908-4550-BF15-C7AFEDA45296}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='C-Level'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
      </datasources>
      <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
        <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='5' param='horz' type-v2='layout-flow' w='99152' x='424' y='940'>
            <zone h='98120' id='3' type-v2='layout-basic' w='90677' x='424' y='940'>
              <zone h='28912' id='1' name='ROI per Type and total Expenses' w='44197' x='424' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40587' id='9' name='State analysis ' show-title='false' w='46480' x='44621' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28567' id='15' name='Sales / Marketing' w='46480' x='44621' y='41527'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28966' id='21' name='Profit change' w='46480' x='44621' y='70094'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41952' id='22' name='Performance Index' w='44197' x='424' y='57108'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27256' id='23' name='Profit per Product Type with Marketing spendings' w='44197' x='424' y='29852'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='4' is-fixed='true' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='8475' x='91101' y='940'>
              <zone h='16451' id='6' name='ROI per Type and total Expenses' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' type-v2='filter' w='8474' x='91102' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16334' id='7' name='ROI per Type and total Expenses' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='8474' x='91102' y='17391'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16334' id='17' name='Sales / Marketing' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]' type-v2='filter' w='8474' x='91102' y='33725'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16333' id='18' name='Sales / Marketing' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]' type-v2='filter' w='8474' x='91102' y='50059'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16334' id='19' name='Sales / Marketing' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]' type-v2='filter' values='cascading' w='8474' x='91102' y='66392'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16334' id='24' name='Profit per Product Type with Marketing spendings' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]' type-v2='color' w='8474' x='91102' y='82726'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8844' id='11' name='State analysis ' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' type-v2='color' w='7415' x='79025' y='3216' />
        <zone h='10653' id='12' name='State analysis ' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type-v2='size' w='7415' x='79873' y='13166' />
        <zone h='6432' id='20' name='Sales / Marketing' pane-specification-id='1' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' type-v2='color' w='8449' x='76162' y='62211' />
        <zone h='8844' id='8' name='ROI per Type and total Expenses' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type-v2='color' w='8449' x='31382' y='2111' />
      </zones>
      <simple-id uuid='{1E8FD549-B09C-4E8F-9D45-6B3957C7CFC6}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Managerial'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='lupita-data-dummy' name='federated.1y6dodl0umfsn31b5228q1pcrc3a' />
      </datasources>
      <datasource-dependencies datasource='federated.1y6dodl0umfsn31b5228q1pcrc3a'>
        <column caption='ROI' datatype='real' name='[Calculation_1606659177412800514]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='(([Sales]-[Calculation_1606659177409134593]-[Marketing])/([Calculation_1606659177409134593]+[Marketing]))*100' />
        </column>
        <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Market Size]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Calculation_1606659177412800514]' derivation='Avg' name='[avg:Calculation_1606659177412800514:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Market Size]' derivation='None' name='[none:Market Size:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='7' param='horz' type-v2='layout-flow' w='99152' x='424' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='90677' x='424' y='940'>
              <zone h='57327' id='3' name='ROI per Product' w='51107' x='424' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53519' id='11' name='City analysis' show-title='false' w='20236' x='70865' y='940'>
                <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40793' id='14' name='Profit per Product Name with Marketing spendings' w='32946' x='37919' y='58267'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40793' id='17' name='Sales / Marketing M' w='37495' x='424' y='58267'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44601' id='20' name='Profit change' show-title='false' w='20236' x='70865' y='54459'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='57327' id='21' name='Performance Index M' w='19334' x='51531' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='6' is-fixed='true' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='8475' x='91101' y='940'>
              <zone h='19624' id='8' name='ROI per Product' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' type-v2='filter' w='8474' x='91102' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19624' id='9' name='ROI per Product' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='8474' x='91102' y='20564'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19624' id='18' name='Sales / Marketing M' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]' type-v2='filter' w='8474' x='91102' y='40188'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19624' id='23' name='Sales / Marketing M' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]' type-v2='filter' values='database' w='8474' x='91102' y='59812'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19624' id='22' name='Sales / Marketing M' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]' type-v2='filter' values='cascading' w='8474' x='91102' y='79436'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8844' id='10' name='ROI per Product' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type-v2='color' w='7415' x='43220' y='1809' />
        <zone h='8844' id='12' name='City analysis' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' type-v2='color' w='7415' x='83316' y='1307' />
        <zone h='10653' id='13' name='City analysis' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type-v2='size' w='7415' x='83369' y='9045' />
        <zone h='6432' id='19' name='Sales / Marketing M' pane-specification-id='1' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' type-v2='color' w='7415' x='26483' y='75678' />
        <zone h='8844' id='15' name='Profit per Product Name with Marketing spendings' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]' type-v2='color' w='7415' x='63559' y='62412' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2400' minheight='2400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='36' param='vert' type-v2='layout-flow' w='99152' x='424' y='940'>
                <zone h='19624' id='8' mode='checkdropdown' name='ROI per Product' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' type-v2='filter' w='8474' x='91102' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19624' id='9' name='ROI per Product' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='8474' x='91102' y='20564'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57327' id='3' is-fixed='true' name='ROI per Product' w='51107' x='424' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8844' id='10' name='ROI per Product' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type-v2='color' w='7415' x='43220' y='1809'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57327' id='21' is-fixed='true' name='Performance Index M' w='19334' x='51531' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53519' id='11' is-fixed='true' name='City analysis' show-title='false' w='20236' x='70865' y='940'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8844' id='12' name='City analysis' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' type-v2='color' w='7415' x='83316' y='1307'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10653' id='13' name='City analysis' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type-v2='size' w='7415' x='83369' y='9045'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44601' id='20' is-fixed='true' name='Profit change' show-title='false' w='20236' x='70865' y='54459'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19624' id='18' mode='checkdropdown' name='Sales / Marketing M' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]' type-v2='filter' w='8474' x='91102' y='40188'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19624' id='23' mode='checkdropdown' name='Sales / Marketing M' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]' type-v2='filter' values='database' w='8474' x='91102' y='59812'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19624' id='22' mode='checkdropdown' name='Sales / Marketing M' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]' type-v2='filter' values='cascading' w='8474' x='91102' y='79436'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40793' id='17' is-fixed='true' name='Sales / Marketing M' w='37495' x='424' y='58267'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6432' id='19' name='Sales / Marketing M' pane-specification-id='1' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' type-v2='color' w='7415' x='26483' y='75678'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40793' id='14' is-fixed='true' name='Profit per Product Name with Marketing spendings' w='32946' x='37919' y='58267'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8844' id='15' name='Profit per Product Name with Marketing spendings' pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]' type-v2='color' w='7415' x='63559' y='62412'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8B1B1CB2-A00B-42DC-BEC7-6E823730F8C9}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' show-side-pane='false' source-height='2'>
    <window class='worksheet' name='Sale Expenses per Product'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Calculation_1606659177409134593:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C7281109-6A2E-49EE-A57E-846217BA1AA8}' />
    </window>
    <window class='worksheet' name='book-2'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6D9AB5CE-3EB5-4E8B-8FF4-F3C92C543BAB}' />
    </window>
    <window class='worksheet' name='ROI per Product'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type='color' />
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B0CB5FE1-853D-494B-9C26-04E0C77B078F}' />
    </window>
    <window class='worksheet' name='ROI per Type and total Expenses'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type='color' />
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{BF31EAED-7ADA-4680-B9F6-29D09FD019A1}' />
    </window>
    <window class='worksheet' name='Budget per State'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{81C86ED8-F7E0-44F1-9D18-185FA3D3E285}' />
    </window>
    <window class='worksheet' name='Budget per State (detailed)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D1BBBD5C-8831-4623-A37F-04211C57AC82}' />
    </window>
    <window class='worksheet' name='Budget  performance per state'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1CBED8BB-4982-4F79-8DB1-42D2692C3904}' />
    </window>
    <window class='worksheet' name='Sales / Marketing M'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' type='filter' />
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]' type='filter' values='cascading' />
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]' type='filter' />
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9D12F3BE-CB19-4A54-A534-177A5653FE8C}' />
    </window>
    <window class='worksheet' name='book-8'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0628C59B-1664-4024-9548-EF370C9C14B5}' />
    </window>
    <window class='worksheet' name='Performance Index M'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{879CC38B-3946-44B9-B6E2-AC095DD3FD75}' />
    </window>
    <window class='worksheet' name='Sales / Marketing'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' type='filter' />
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:Market Size:nk]' type='filter' />
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[Product Line, Product Type, Product Name and 1 more (Combined)]' type='filter' />
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[none:State:nk]' type='filter' values='cascading' />
            <card pane-specification-id='1' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2863262F-CA14-47F4-9A11-B5087419EDD8}' />
    </window>
    <window class='worksheet' name='Performance Index'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2515033D-AA05-48A3-A902-9065CC08EE68}' />
    </window>
    <window class='worksheet' name='Profit per Product'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{10D88EA4-A143-43B8-AC6C-CB4806D869B6}' />
    </window>
    <window class='worksheet' name='Profit per Product Name with Marketing spendings'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{08663B96-B14C-4B9D-850E-694580089E97}' />
    </window>
    <window class='worksheet' name='Profit per Product Type with Marketing spendings'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{22DFD080-A81D-42A1-9A33-508D3AE62D65}' />
    </window>
    <window class='worksheet' name='book-14'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[sum:Marketing:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{06EBF820-713D-446A-ABAD-705DC4F25C40}' />
    </window>
    <window class='worksheet' name='City analysis'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1C8F0EFD-88D1-4E03-980B-F4BF865A469F}' />
    </window>
    <window class='worksheet' name='State analysis '>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[usr:Calculation_1606659177431011334:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[avg:Calculation_1606659177412800514:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{B1E28BF6-92D3-4E45-A08C-9E0D3D8F4C6C}' />
    </window>
    <window class='worksheet' name='Profit change'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{804614AB-A15C-4AAC-9357-7044FFA0D6A1}' />
    </window>
    <window class='dashboard' name='C-Level'>
      <viewpoints>
        <viewpoint name='Performance Index'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit change'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit per Product Type with Marketing spendings' />
        <viewpoint name='ROI per Type and total Expenses' />
        <viewpoint name='Sales / Marketing'>
          <zoom type='entire-view' />
          <highlight field='[federated.1y6dodl0umfsn31b5228q1pcrc3a].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='State analysis '>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{BBC4834C-A804-4D43-A6A4-ECEC0C120679}' />
    </window>
    <window class='dashboard' maximized='true' name='Managerial'>
      <viewpoints>
        <viewpoint name='City analysis'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Performance Index M'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit change'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit per Product Name with Marketing spendings' />
        <viewpoint name='ROI per Product' />
        <viewpoint name='Sales / Marketing M'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='21' />
      <simple-id uuid='{CF21B5ED-23E4-4C37-B407-6405932351B4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='C-Level' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Managerial' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Performance Index M' width='192'>
      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
      ykaC4Rj9pDUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit change' width='192'>
      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
      ockASIb2/wEJGx3pPGHODwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit per Product' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit per Product Name with Marketing spendings' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3MU2fav+WRmeW9VJe+FHCCB8J5uzOnT3cfHNXMjJmZezOf4f4x5MxMx
      c+fG3In+3+P7tHfQgAAJCSMk5L1UTuV9Zea8EN00DY1EI4Fo6okgApWyVu5M5cq991q/vbag
      qqpKmTJvKOKrbkCZMq+SsgOUeaMpO0CZN5qyA5TZkGg0+qqbsG2UHaDMhqRSqVfdhG2j7ABl
      3mjKDlDmjabsAGXeaMoOUOaNpuwAZd5oyg5Q5o2m7ABl3mjKDlDmjabsAGXeaIQfy6FjsRjp
      dPpVtafMDiSRSGCz2V51M7aFJxxAURTKSwTK/JA7d+6Qy+W23K7RaESj0ZBMJrfcts/nIxAI
      bHic5scfiGJ5VFTm5SAIAoIgbJvtzfCEAzyNUnaJP//3a5z4j7+h0qh9oYY9HYVMIonGYkcn
      AkqBeKqE1WZ6TScpKvHALIODd4hkFVr3HmNPS8UT16KW0gxe+ZbFpMKR0xcozN/g5v0Au0++
      RWuF5ZW0/GnkJCOreteW2LKWEpjlnSOu24QDqKxNjuKsdTA6E8Pf6QVFoVgqIheLyIIGg1Yg
      ny8iavUY9VrkYoFcPo8qaDAaDYiCSqkoAzIlVcKgk8hns5QUMJhMUEox+MXn+I6fp8ZqQExP
      89nlMGff7sFiMKKVIJvJoiBiMBrRiNvz1tgqlEyYq9dH6Tj2NqedOhLxLKgqxUKOfFFGozNg
      0IkkFx8wW3Rz/nQ7WlJ8ObXKsbNv4bSZUEoFsrkCSDpMBi0CUMjnKJRkdAYjWklim16eTyAL
      GnKSaUtsGeXMltjZKjZ2gFKGewsChy/s58and8nu8qJNh/j7R59hsbmJroUwOSrQq3miips/
      vH+chXvXGF1JoxSK+Nv76Gu1cOXTq+SUPLaWPnaZQvTfD4CcweTbS7snztjcPEvSFeItnRgj
      d1iYS3D1apGunn1oV+9wbSqGQShiqtnDmb6WHd0zrC3PY6hpo8FtBsDh1JJbm+eLbwZQdTqy
      OR3nf3OM+8P3WQyqXBcTeCxm5heXUPuv071/L2sTdwkm86RTGfa9/R7e0grXb41QKMlktF5+
      c+4QGnb2i+B1YEMHyCTXkC12LJIdqzHNWiKLTwJ3fRenD/UwP/AlIU8P+xsMXPvsNkXAX99M
      OD1NMh5memGFvtYWAoE4b/3n3+PWF/j6L/1ITjd6QcfC1CC7u96lp22JytMXqTEBGZhJBjl3
      vg9NPsVHtzL87jfvIgkFbn76CcupFmp2zgjhCXK5Iiaj4bHPpiamaD5wll3VdpITX3NtNM/J
      A3tYWzRw7lAbqlwglc9w8MgZCoEH3Ays4XG50akxBm5N02EcJ14w4LToiY7dY+bYQVrNZQd4
      UTZ0gOj8fSbHQ8QCM+RiEZLevfhqRQTxuwmM8IP/AxS4cWWQun2HqM05uDqTAQT8dU3YDToE
      OUMRA61d3dhE2NOjx2EUmfmJ838XkRIEEAQJrVZFVrbk2rcNu9PC7ckwcnsN0sPbUlJkdJKE
      IAjo9HrkdOknv18qFTC5aujubga60ZtsTA2MU9vaQYPbQHd3D3ZD+eHfCp7pAKqcZnYJfvdf
      /if8BgElvcin386TrWl4xrcUZFmlmM0QX14gmXEA6w8wAqCx0lCpZXxyifYqK+mcjMnSjMGk
      MDM+gVTrw28zIWUDTE7NU+1zUWNUuHFnHJcQY1WtomMHv/0BLL4mKh58xbcDGurcegqKmaoq
      H4MjtyHtZW4kROfZg5BYfer3rZ4KxOEbLK95sQg5lJwGf6WPwZlZXLpqsmsptG4Xupd0PZIq
      o5O3JgwqqT/t+K+CJ/IAP0QtZVkMpaiu9D4cc8uEllexuNwk0ll8bifpSIC8wYHLLBFeieGo
      9JBanWF6KYbDW4FWb6CmwkookMTjdyMCSjHL3NQE4VQJf30L1R4bxXSE8YlZDJ56WmrcxFZn
      mFlJUtPchtes8mBkjIxgoqWtGZthOyJRW4tcSDM7OclaRqGmaRd+p57wwjRzwSSe2mYafHbk
      TIxAVqTKbUNVFMLhEC6PD0lUycaCjE8vIGsstLW3YtaoBOanWAwnsXhraaurQHxJs+ChoaFt
      yQOYTCY0Gg2JRGLLbfv9flZXn/6C+SHPdIAyZeCX7QBPDIESiQTZbHbLG1Tm9UVV1W1JkMqy
      DGxP8jWbzW7K7hMOYDKZMBgMTzu2zBvK8vIyirL1kQdRFJEkaVts6/V64vH4hsc94QAazaaS
      w2XKvDDbKYXYbK+y4dOuKkWWp+4xcGcKweTn6KmDeExPxh+SgUkuX7uLtamXo212+i9fISVV
      c/JsL8an2ZVLDN0epnvPPnSan2isIpPOFzE/jKnLxTwlVUKv2+FOmgnx0ReXSeXWu/jK1oMc
      7qnfnO5kB5IVDCyJ1i23KxUlxJJIUdS/sC2LmsWhPr/EYoO/iUpsfoT+iQy/ev/3COk4JY2A
      qqqoioIqCA8jESqzY3eoP/RrOnxawvevotTu5+02H6KqoqgqqgriY/kChdXACh3fTcFVFRUV
      RVEfvRmya3z4zQh/uHACQRAIjA8xo1ZyuLP2+wiIqiggCAiC+NKkARtSzCD5u/nTgbbvP1J/
      cB8EUUAUQFVUvrv89WuG9ZCEiqp+9/MP7t0P7Pzweh+7B/z4PC9+U4pIJAXzC9t5gu9GPsKL
      B3Q1qvzzvvfsX8vMTUyz58hvMWlFcDgBWBy5yvWxZRSlSHX7aZotAfpvjSEuQmxXLSuDw4SN
      82RXO9nfZeX61btkS3ms/m5OHe5CLz3tVDlu919mMpCgVBI5cPYt5ImbTN4f56/ZCC0d3UwM
      DLOSHyMyV8fxt0+xcONTpkMZZPTsP3mWRs/W6FW2g/TqJJ99ewtF1OJp6eXUXi8f/7c/U3Da
      yKXyNPae5uAuM99+eIWCNk/J0c7xBpUv+8fIF3M4qns43uvn+pefE8qCxl7N+ZO9zN34ktsr
      abQaLUfe/g227DRfXhqgoEoIlirevXgU/U55MexANnCAAumUEb/l8SGKu7qJlryObD7BwsQ4
      +357ioM9E1h6fk+zE4IGmVV3B3sqTdz++EMEt48aDUzNjhDubKHa+ZQuT9JR19RKSRciFZhk
      cjnNhZ6DtCYs/OHiSQB8QowZtYojnbWoqQk+nC3S2lZDJrLMyPgsjZ7OrbovL8zy6DU+mL0N
      QP3uEzRoUhjc1XR1dlDhtgM5rJ5Gei4cQ58O89H1B7Crl0g4wt5336XepePmx59g9FRQIanM
      zw2zWneStKKnq7eH2qoKDFqFZKJIfUcP7fWVWM1w5/YkXcffoanCxNyNf3JnqcCBmpeVMnv9
      2MABDDjdBVYDGfw1D9+ucorhm/cw1zdR6TazsjT3DGlCiXRaxttahVcD/tomvNanJ7HyyTC3
      7k3S0NaGVV1jPJ+HZ+Q61UwKxerB7/cj+P2YHN4NL/ZlUtVxhPM/GAIpRQc9umVW5kYYHrXw
      /pk2REmzHgnRaL8fqngqG/C7bYhKmlRWoaKjCrsIVXXNVHjdOA7tI7Aa4MvPRjjy1hl2Hz/K
      8kqA4cuf4um5SKlUQq/XIYgiNouRuXyJZ93HN50NHECkdlcXn1/7Boe4DyGVxOS3kCmKVFqM
      FCPLJIrPyqPpqW2yM7QUp3ZXBdF4gqLs4bs5rFLIEg6F0Gs1aJQsiqDDYtQxtxam6GgDSYs5
      n2B6JYDH7kRn0LM2u0LQa8LuaMSa+ZSS2IBBzpDK5PHad84QKJ9JEAwGAdAZbajZVVIFDZVV
      VczdXwGgkE0QCqyQmp/A4qwCHi7kEADJQFONifuBNL4GJ4lknIzJRDAcw15RhWsxSLaYIrEY
      Qe9y01BpYT6epcnrYnz0PkKdi7uTGXouPC0E8XyIqGjV4gvbecLuusBrS8KgEj9vDrBxJlhV
      SYUXuD06g2j2snt3G/LaPHcnlnHWNGBRFaoa6oivTKH1NGPXQ3YtQEbvxG3WocgF5sbuMBfJ
      UlnfTnOtB40ooCoyU3evsxgtgGSifXcHpeAM04E0dXWVYHTRUGElEZjjzoN5qjv20+DSMDV6
      l2Baw579exHjS9wenQaDk47OdhymHSKRyCcZvnOXWLoAgLumnbZqI5Ojo0SyAs0du6l2KXzy
      /36ItqYSm7Oa3Z3N6MUiKwsRvLV+NIAi55keuc1SrEBlQztN1XYCM2NMLUXx1O1iV72XxOos
      o9OLiJZK9u9tRasWmH0wwkI4S137buq9Lx69+SVngstSiFdGiquf3qXn/BF2Tr/1dH7JDvDE
      ECiVSm3LxZb5MSpNuxtJh8PsrDVST6Kq6rYkrBRFoVQqbYvtfD6/KbtPOIBOpysvjC/zGIIg
      bEulEEEQEEVxW2xLkrQpu091AJ2uHDUos/185wDbwWYlPRtLIVSZyMIY1wZGwVLFsRMHcD2l
      MkQ6MseVK0MYG3o41uFm4NvLRNXKn5ZCKCUGv/4b2pZz7KmzrS/6Tszzz3/c4+R/uIBH87Rs
      2WMNY2pqguq6Zgy6DY592WQifP71ZaLp9cjJ6y6FmA0k+OTm1Jbb1Wg0CKJAsbD1ESajaZZs
      ZmNV84Z/k/jCCF8Nr/Gr936HkIhSEp/erczev0XNwV/T6dcRvv8tucpezu+q/Oll26pCVlAJ
      3rvPrurDGCSF1dER4tkiaVnZ2AGAQGCViqrGnecAxRSKt5M/vdO28bGvAaF4lssjy6+6GdvC
      Bg5QYm5iij1H38OilcDtAWB59DrXRuaRVZnG3Wep1S1x5eZ9hFmZyK46Vm7dImyYJbPcxcG9
      Tm5eHSaRy+Ou7+V4X9t67R8AjRuXNcNaMoffmGc8Zabdux4Tji6OcunaXfIIOGq7eftQO0tj
      17lxbx50Fg6dfAuyUa589TGpVAqtr5N3T+1mdvgyQ5MBFHR0HjpBd517G2/f5kkHp/ni8gB5
      VcK/q48Tuz189t//TsZiIJuW2dV3mt5mA9c+vkFRlyVrauFEs4avr90llS/ga9zP4d0VDHzz
      BUvxInpXPedP9LAw9A23ZqNodEaOn3sPW36Wry/dJFUEg7uRi2f70JWlED/JhlKIVMKAz/74
      YY7KerpUC4VCjMmxB+x+/wSHeiex9PxxXQphUh5KIczc+/xjJH897XoYfXCXcFs9VY5HUog6
      j53FUAyrI4vB7kKXSgIKEw8m2Xv2feoc0P/PT1nKVjA+lePMe7/HoVGREZnXmdjbcwSfU+by
      ZyPkEfDWtNCpc5OJLDI1v/LKHODHUoh6MYbBW8+BjjbsVjNQQG+t5NCFk+hTAT4ZGKO3uYfA
      ygodF39Fi8/M8OefYaluoEajMDUxxGrlMWIlPX1HjuB12dBrFKKRHK37DtPid2I0wOidcZoP
      nqO10sLU1X9yb2Uv+6p2SH5kB7LBDESPw5knFP5BWFRJc2/wHomiilZvRCmmnyGFKBKLZjEY
      DWi0Bnb39uEyPe5MrroaUvMLrK4s4q5u+P57hbyIxaxHFHW4rSLpTJaiZMGs1yBqtGglESQ9
      FpMeUZLQiCKKUmB4YIC8IqDT615pOLeq4wh/+tOf+NOf/sTBdj+ehnbaKq3Mjw/zzcAYABqt
      Ho1GRKs3IgrrQ0tPVQN1fheSWiIaz2Ew6NHqjHT2HqDC4+Hg3naSgTm+/voqsbxE1+H9GDJh
      Bi59yfRajlyhiNlkRBQlPC4ziUzhld2D14ENegCJ2rZdfHr9EhWnjyAkYkgODbG8hr31teRX
      75MpPVsKUVNvYSQlsbfLTzgcRvnR4YLei8/Yz+CUm/e7DYw+/J7bJTExPodULTEaEXjL6SUq
      DDExH6DaAuicT55OzZMp6umqqyZ4f45Cces17JulVMx9v7+uRqsnl4ggGL2077LxxcMJZamQ
      JZWIszx7H711XcskCOL3UoiGSgNTeT0dLS7W1iLksnkSOYXGtg6y4ask8gkI5fA3tODWxLgX
      TNPitDE1OYW52cPAgwSd5188zaaRRMzbUIhgPUy/PSFWURRQfvywPa0NG0shFBKBGW4MjyNa
      K+nr60IOTTEwMo+nsRWrqlLf2sTawii6ig6cRkiHlkgbPVRY9CilPJN3bjIZTFPTsofOJv/3
      UojFxUUqa+rJRGZYTJjobPayMj6NqbkJq5zl/vAgS3GV7r5DVDkNyNkYw4O3iKtW+g7sJxle
      pMJXjU4rszgdwtdYRWTqNnemwlTV16M1WdlV59+qe7p5cnH6bw6wlswDUNGwl+4GE/eHbxNK
      Q3vvAeo9Kh/9P39F8Xqxe+ro6+nAIBVYmA5R2VS9LoUo5XgwdIPZSJ7att2017lYHL/D2FwY
      X/Nu9rRUEl0c5/bYLKKtlmOHutCpeSbu3mI6kKF5dx8tlfYXvpxfcia4LIV4ZZSlEDvBAZ4Y
      AmUyGfL5/JY3qMyPUWnqbiQXjbLT7/Z2SiFkWd4W24VC4edJIURRLC+Mf0lofmJtxJvEjtsf
      wGAwlMuilHmM7dICiaK4bVogrVb787RAT6KSWJ3kcv9dBGs1R4/to7A6g766DftLfIGtTt6j
      6GrGp8swE8qyq7Hm5Z38eclGubOUZk/LehvX5sfJ2uuotm/0YkkyNZ6moc3Ps3Lb+eAEc2oN
      bT4jyFmGr33LVODRONrTsp9Texte+DK+I5JRuLu09eFUrWa94Fa+sPW2zWsR0umN7W4shVi8
      zycDK1y8+D5CIkIJlbXFWSy+l+sAvuYuADKhFWaXojvbAQoJHsyFv3eA+PIcMdG3CQdIszAb
      pm4DByiszTGjeNcdQDSw5+hb7FYVPv3XXzhx/g+YtFs7rIjlVO6sbkdR2+0slLtxUSzYRFWI
      +YkJuo++g82gAYMPgMV8nKHLn3M9HsZSvYezh3exdLefwYllVFWi68QF2o0R/n5lBG0xQyQN
      zXVuAqur6DxdnD/VSXTqDpeGJlAFHW37jrKnSs9nl65APk8oVaK6yktyLUhWquL9948zf/Uy
      Uud+vgtqqqrKyuQtBu/NUhAM7D54nLaqFw/5bSeF9BpDN66zEElh8e/izJFulu59w1rJxuJ8
      jLO/62JtaZSP/jZOrqTjwKkzNNpLfPPp1wQzRYwOPydOHns8e/mwNI2qPlJXiuJ6naarN0dI
      5Io0dh+jt9XJ6M2rjC1EUCUjR9++QLWtPAfZIBOcJxHT43I+Lo8WJT1New7z+z/+EVN2nmxR
      wFnVSO++/eztcjM+PIusyggWP2ff+S3H64rkvPt4//fv4srGSOWSDE6GuPj+H/jtr48THh0i
      mlcoiSaOnX+Pt3e7yRpquPj++7RoCiSAYj5H6bG1oznu3pmlqWsvHTVWbo2Mb/nNeRGi07f4
      4IMP+OCDD/jyxhhFBYJz94lLPnp7e1CXxphP5EmHA4SKFs7/+jQ2wOxu4Ny7v+X84RbG7j8A
      UU9z1x727+vBrgSZC22ibquaY+z2BM7GDnp3tzM/epN4TsRf38a+/fvo8ha5PRPb9nvwOrBB
      D6DHZs+xFi3gr3jkBJLGgMVuQRBApxOhmOTu8D1EuxO9VCCXTKJgwmC2YdBKaDQSFqsNScyi
      kQRKxQKq1oBZLyHgwm7KkS2AxrgudchKEmarFa0kodWIPHUqo8aJhPI4EnE0gpnu5qotvTEv
      irNpH396az8AM/2fERMhuRYik/cRi6lUtOzCbdAStDrpbGvF9FAhqDcY0UgiktWBQJxcaIpb
      D8JUuS1k8kV0m4nHl3IEIynsriRxAZrau9AV1ui/N4LN4UYqlEikUsDOqqTxKtigB5CobW3h
      7tVLJAsyyWCAaO4pE4tcgjXByb7ePXiNEs9URwBaowl9Zo25aJZUcILljAvH8xYvENzY7UV8
      jR3s7mjGstMk0U/B4fEhiAZ29/TQ4HYgaL6rCPfozyDLJZRSgZkHIxgsFcRXl3G17GF3ewOi
      skndvNZMtUsCWy09e7vxWDTkkilUSwX79nZj0sg8/a3ydF5HMelm27zhJNhR08VFUctXH/4V
      yVbDsWMuXNUN6B9+s7KmAZ2jmv3Vq3z84SfU726nd5ceSW+lwbc+ZLFWtoF5/XT+hmoMWgun
      3z7BN19+wh2th+NnDmPWFmmoXh/hG9211KgmQMTTUIsJcNc1IBp0aFU7DdU6BEHDuV+f5/Ll
      zxjGRM+Bw899k7YNnY22ukcOaa+sR2fR4686wJ7iAP/8619x1ndzrFbE5W9A87041ozTGOVf
      f/8Qd303x3ob0coVTH/1JZ9NOWjt6MXoMKBV6mlQf1xcTKCxqY31Mqtadp8+x3D/t/z1XpG2
      3sN01lXSEO7nnx99SVf7Hjr0m58vNbkk/rcDW5+v3gmZ4LIUosyGvFFSiFwuR7G49UvUyry+
      bKcUQlGUbbFdLBZ/nhTiu1IVZcq8DLZrALJZu0/dIcZk2un6xDIvk9nZ2W2TQmy2fMnzotPp
      tk4KkQzNcXNoDMHsZ39fNzb9j79WYmlyFltDC9bn1NFl1wLEJQt++6P685nwPEt5K63VT1n0
      8ppQyicZHb7FUqxI696DNPltT0Ym1BJz94eYCGboOXQSQ3KG/uEZWvoOf7/L/E4gGM8zMB7Y
      crtanXZdCpHbej2sdTZNMrnxhhkbPq7JlXE+vT7H8VNHEZIxior8lK+VWHgwRl318ztAJrzM
      ir76MQcwOCqpV1/f4lxqMcmVL77E0trH0Q4DsXgOBdsT8oZSZIbbQZHTB/owaUt8PXSP7oOn
      cdlevKDtVrISy/Lx8Mqrbsa2sLEUYnyMtkMX8DkN4LQBKmsLo1wdGCGraOjsO0FH3aOHt5QJ
      8fWX3xLNKfgauznU08Li9StMl/LElyPYquvRpEOE4jJH33kfEwpzIzeYH8gi2mo4e+YIxYU7
      TKkN7K8zMzrUz8hsENHo5vipExgyy9y6N0EmlSSpWHj7whncO6Uo7kMSKzPkHC2caKlGFMBm
      g1I2yrUrV1mMZbFVNHPqeAvXPvuGsZCCnFrGb7Nyb2yScFxl/6mTaMIT3BlfQDG4OHX6BBYl
      ztDNmyxG0rib9nCyt+Wl7RP8S2YDB8gTW9PR7PmBiKuYYPjuEvvPvUeFJsfHn1+hpuLUw1+W
      GO8fwNv3Fmc8Ou5c/ZrJVR9CMkVl30nO9K7x549Geeu9X2FYusbN1Sy7AU99N0faq1kc+oJb
      0zE65BRptQSChKe2jWM17cSmbjK6lGCPJU9J6+DMO2cJDV1iKZnbcQ6QTGRwOGsQf/B8zj8Y
      Qaraw+/P+Jm7/jG35ls5fPIgmUUDvz7UhioXKIkqB4+cQY3NcSlUYN/hI+SW79B/d5ldxjlk
      eyNH2gwMX77JSlcz1eWtX16YDRxAh8WaJZ4o4Xc/PDSXIqqz4zfrEQQ9dotEsfiwNrsis5oU
      2FdhRRIFKvxuVhNpjIIBl9uCJhvHZHZgNmoRdTrUnAqImC0mJElLRW0lE3NJeLiWvZBNcG9o
      EMFsp7QWJa3LgEWD0+PBqJUwGF58c7XtwGTSkYykHwrU1j+LZbJ4Kl1Ikpa6xkpGFhPwE+qN
      dDLKWijArEYFzDTWmVkbXyRQKiKntVirazC+lvnZnccGA20Nta1N3Ln6LemiQiYSJq4x4ysE
      mQinKSZXCMZV9IaHziFqafLC7YkgpXySmekVrJ6NM46yLCMX0ty5NYmv/pE+JZeKodprOXns
      MJU2Pc+Vv3+FOKoakJfuM7YaR5XzBANreOwWZucWKRRz3Lk9Q+0z6hVZ7Q60WjPdB45weH8X
      NoMWt7sCi6uaI8eO0lVfjbZcvnVL2DATrCoy4bkRrtwaR7JWcexEH6bCGv1X+4kUTRw7fQqf
      VWTm7n1c7XuxSzmGr3zNdLhAW+9huho8rN4fx9TVjqMQ4/bYGp17mhAiU0yWqqmRIgwODhBO
      QcPuPnpbq8msPmBZraSlQsvowFXGlrO0tlSh2htotZUIZgUaqrwkFidJWGuo2VBn/7JRySVC
      DPRfZzWp0HHgBO3VZiaH+rk3t0ZNRx8HOmopxRcZW9Owp8mPqpSYmJykqaUdSVCILIzRPziK
      rHdy+ORxvPoS9wf7ebAYxVXfxYm+XWhe0hxgcPAW8dTWF3E3mYwPM8HJLbft8/kIBDaOXJWl
      EGU25I2SQhQKhXImuMxLQVXVLdkf7Gls9hl+qgOUd4gp80O2Swv0nQNsh+3Nllt5wgEsFgsW
      i2XLG1Tm9WVhYWHbpBAajWZbbOv1+q2RQmRCM9y8P48gSlQ1ddFU5Xwsvv1TJEILpAQnVZ7N
      OJNMcG4BU3UDutQSCzkbzf5XV9fzRZm7f4PZHyxdtPma2N1W+1Cr//qRLgnMJba+8bqcjChC
      Lrf1tsPkSGyizRs6QCIwS0pfxf56E1O3rxBJ93Gwzb9hFNpodaMVNhurKzE3cpdKbwNVJicV
      +p2V2HpePNVNGOxxLl+6R9/Zw9iMlk29NHYq0bzAcGQ7VtwpD/9tg+1IelN2N1buiCI2hxt/
      pYcKt4kvPxsi3uAhMTHIwOg8GJwcPnGcCinF3bkQ+vQyUV0LrY40IcFLR42duZFBhsaXsPqb
      OXxwD7r8GoPXb7CcKNC69xjdTY9yBbnAA8ZKzRyoWOPr4WnEdJjVmMLhC7+i1iowO3KL2xML
      qKJETdcJDrR6XuQ2bQtmuwezSYvZZMXr82EG8skgAzcGWI2XaNpzgN6WSmbvXmFofAXB6ODA
      kRNUO3dmYu+XzHP1PaLOjceWJZ0Fs7eB0+fOc7RRy+2pEKpcYPruEDlnO0f21iFnEiQyebLx
      BaYiOs6eO0eFEmBsIcj8vbsYW/o4d/owS6MDRDOPZuxyNsZaugilPGuJIt3HzvPbkzXcexAi
      HZhmPCJy7t3f8eueCuaiO72q5iNmxu5ibdjHmRP7mL81RBKwVTRw6q1z7Gt28uDB7Ktu4hvJ
      c2o386QS4CfL2N2bJAoahGyQoNUNzS4cDV3sa61+/BuhBSYXIpTyIQAaDLAwtUwsXiAAiDYv
      +p/oqSweHy6zHhQzGkUlFctT3VSHWSehbGIPsZ3Eytw4a6tFlrVgcDgR1Ayjg8LoewUAACAA
      SURBVIPEBB1KLk7W3Pyqm/hGsmkHUJUiU7eukPN3YlPSpLUuLpw5xMqdzwlH1o+RpCc7FJ2r
      CpdV5ez508jJCBnRhFprQePbx4k2N+FwGN1Tvvc0LDYNw1PLtFS5SYTXgNrNNv+V46yowuTd
      y4FdXiKrYXTZIFFNPefPdrA0cp1bwVfdwjeTDR1AbzQze+1zVkcM1O/ay7H2OgyUqDXm+Mtf
      /kFDfSX1PjuCxoDX+QPdjyoiSQJmdyOHWtb4x5//HYOjmoOH99Pcd4Jo/zX+/V6BmrZe9rud
      OP2VGCXQWLz4SjrQKlQ4HzZPY6XCZcBc6aMl1M+Hf/sHfksJwbmDZ5aCBn+V9/tpWOe+Y9zs
      v86fRwr4W/ZwpLKORusk//jHPJU1VdT7Ha+0uc+i0qRyoWYbtjI1rkshksmtl0JUVHgJBkMb
      HrctUoh0LMjtG7ewdx2iawtXdZXSa4zNLGM0GohM30XTeZF91Ttr8cgvkTdKClEqlV44PZ1J
      xjBVtVDnMlHYysq/kg6zRmE1GMJUv592r7S19su8VFRV3bZF8Zt9hp/oARKJBJnM1iv/yry+
      LC8vb0upHK1WiyRJ29K7WK3WTQ2tnugBbDYbNpttyxtU5vVlZWVlW0RrkiSh0Wi2xbbRaCQe
      37hE+oaT4OzaEvemlhFEiYraZmq89p+f1VSKLM1MEkoLtHa2Y9ZAJrrC+PQiRQUEUaKubTcV
      r/vWQYU0Y+MTJLPrb02Hr5HmOs/zJV12EJmSwGJy6wMO+oKMJEEms/W2E1Ke2CbavPEGGcsP
      WEy72FtrZGrgMpGOQ/Q0en/WgrxscJLb83G6WurRPDSwNjtHUjRR47IiCCJG7ev6mPyAbJix
      1RR7m9dzIibzTluw83xEcnA9sB1/l9LDf9tgO5DYlN1NSCEkPP4ampo9NFQ7+fyLeyRrTiEH
      J7l68y6KpYrjR/dj18lM3r7JnekgdbuP0Nto4/b1a8wGEzhqOjnd6+PzT75iIm2gmMly0lf5
      MAGmoaK6lsaKR9GiZGCKb/tvkxOt7D96jDphiU/vhsitrWDytXL0QDfGxCS3YnaKs8M4Og9T
      rYnRf/0WaewcPnUMjybLwLWrLEbzNOw+xL4mF3f7LzGxmsTTtJcT+1rIBKa4cv0OOcnKvkNH
      qPNsXS0ek72CxsbG738upSNcuXKNQEqmee8Reptt3L50nWA2Trpk4sDRY1Q7BUZvTSHpkixk
      XJzc7WXw6jUWEzJdfcdoq7IwNdzPnekA9tpOTva1E5+7y9XhSTB5OP3W6fXqEdevMR/OUdu5
      n7722tdah7TdPJ8UwuDFrgsTCa7y13//G5GszOrIJT66Os7CxC2W1Ep++4ffs6vSgloskMsX
      UJUi9774K2MZN8eO7af3+Nv85tdncD5DJxeYnyKFjc7OXZi0QC5KVPTxq/ffp8EQ597kCmp2
      jdmFAP7uw7TYS3z8l78wG8uTWBrmb5/cJBYNMR9I0LBrN5V2PeTXeDC3hq9pF80VNhQS9F+Z
      oOf0rzh/bBcPrg2w9dHoR6QjKyxFczS3dz8c4pUIhdP0nLzI232N3By8A5QILs6T11dxvLeO
      21/8lauTYUrpAB/+7SOC0TgTMwu46nbRWutBRGZxagLVWsnernooqTwYvo6mai/vv3cBQ+AO
      94PltR3P4rmkEHJmhWixiiZtEd+ek7xz5tD3v5u78zVOjw+NKGK321kavYFY0cnv325i+foH
      rGxiY5PvaDlwntp0lAfDgwxGMlyoAafbg1bSYnfaCSWLgIDN30CDz4acWELXcJD/5fzRxy7o
      j3+sZXlujEvX5vjDu2f443/8PaHFaa5fu8ah35xEFvTYzXqMONDIxW3dscpe182f/M0sTN3j
      m/4l/vP7+zBZnJiNOvSKA42wXnhKY3DQ0lqHXsmQln38l//1HSp+MCV65/f/gXhgkW8uX0Vz
      8SL7zv2BXfEwI9e/YanJhT4v43M50OoM+Oww+Rz3/U1kYweQC0w/GEYbNRNbi9Fy4Dhup4gz
      P8Qn31zBplUxeFvYVdvM2JVLXFlxY3JU4tdqic3OcCO7ysq9OWrqfuoEeSbu3CJqMSOIEg0d
      PWTmBlmMK5BXsdjWFZKLD4a4FhWIxAv0neiA+KMFz5LFQ6NhmI8/u4TbIqG3VFHnUxi7v4Kk
      UzFZTBTjS1wfnUMjgUZvRis6qKnIcembbzGoaZSqJrYyFxtdmqBfXgPA6W/GrV1jbCqEKMqY
      retDrWRknsF+yEYjVLYefNyAaKSz3clX//qE2gobaAy0NTcydf8WssaExmhGK+W51z9MHJDR
      YzFINDTUcK3/GxbsJoJres7teXGFqVkDddatj9RoJA2iKFIobn0ux2gwks1t7P0bZoKLmTgr
      4TiCIGJ1erCbDQiCilzIEgxGkEUtLo8Xk1Ykm4oSjqWxOLzYTSJr4TB5RYPVpEEyudArabKK
      Fqvx0finkEkQisSQVRAEEWdFJXo1SzgSQxH1eLxu9MEB/se0nYP1ZixODw6LAQppkooBm2Fd
      bCAXc0RCYfKKiNNTgUmjEF2LkCko2F0VWA0C8bUIyWwRs8ONy2pEKeYIhcKUhIfn2aoVK3KB
      QDBE/mG9JKPVjcuqIRqJkC2Cw+PFasjz9d+uULOvE4vBitfjQBJkUokcJpsZkfWKHLFIkFRO
      xmx34bDoScfXiKVyGG0uXDYThXScSCyJoDXjq3AhIRNfC5PIlrC5vNhNL14/5ZecCX49qkIE
      7/BtspHjza/vKrEnyTD07QM6jvey02NEb5QDRKNRUqmNq+qWeXMIBoPbUilEq31YHTq/9es6
      zGYz6XR6w+OemAM4nU6czte3LHmZrSccDm9rJjib3fqZutls3pQU4heQdSpT5uezYRQoPHaZ
      P/cv4LRosXmbOHhwD07jz5MqyJkwly9dJSFbOXFuPReQWx3jRtjMye4fLW7JRbk1Hmb3nlZ+
      fLbQg6vEvEdpdf34DCr5RID+azcJJfPYvC2cPNXzCsbYKuGFMW4OjZEqqDR2H6a3veqJJdpq
      IcHVby4RzEkcPXOB5MQlhifj7D31Fq0VO6c0zVJS5dvprRfDCWISQRBQZHnLbWumVimVfrrN
      pxs02PXCxg5QUhQ6Dp/neJuDlQeD9A8+4O1j3YilLJFwFHRm3E4bkgDZVJxoMoPJ7sZu1JCM
      rZHKFdFbHLgtGuZHh4lofBztbcb88MxKKUsqqwUUMqkcOr3AWjyHy26mucmAVlUpZJNEYik0
      Bgsuh5VSPkkqlWQ1l0RvceKwGhEEUBWFgSvX8O4+yfEqB/lUFklVSGeyaASZVA4cDjOZ+BrJ
      rIzd7cWkFylmkqzFU6iiHq/XjUYtkMjkKWRSlCQjDpNILJ7GYHNhN+s3lIGUkqtcv73IvlMX
      8Vu1pNIFBFUhnYgRT+cx2Z04zBoCE3eYK9g5daAVbSbE3ekgvQeP47MbKOZSrEUTCAYrXocF
      AZVUPEoyW8TicGMxaHlZ2wMUFYhty/Lr7akKB0D+2Q4rPzz1phNhgqihqmMfsx9/RCTVTODe
      TRKyRDYWxrf7JK32NN9cGsTsdGN0ZOmut3FvZAQFgUggzfF3T7C8HCSWyTC/YMLq9qB7bACW
      Z/hyP4qlSMlYx+FGI58Oh/nDyW76L3+BavKiiHp6evYiF/LcGbxO2qsjHM1y6u1zOI0iipIi
      WjDRV+lCEgVMNgtKMcfN61+hFsBS3U1jboXh+ysYdCrxsVnOntjH8oMRFpIyQjbCTP0xjvgS
      /PXTIeorvUQWZ9B46nEZC6zF7Zx79xAbLcGJri5hrm6i0r5+pNWqIR2c4uvro1jsFtbCGU68
      e5rVpQDxNVhYMOAw6IklkizOL2AwaVkeGyEnaEhFQjQduUilssyt+/NoNBBMa3n3wjF05Q0y
      XpjnXBSvxWiC1FqE0ckJTHYvFOLcvj2FqT6Jf89pehseLotU8lTYDIzNB0mGpllIvUNHRzOF
      TCWH9jw9K6bkYzh7z9PptyDE5x9+qlLM59G5HeztbMNu0pHTGdh/7G26K+Duza/JFmScRhHU
      DAIWxB+JX1LhKPve+U9UWQSGPv7/WE1bsGlhaXWByL69eCt9zKzeJ1NMkR1f4KDPjr+lh1P7
      m1noD7Bad5oDVVlufjpIATZ0gEK+hPFHexdMT8/Ruv8kbVU20lOXuDSa4XRXK0t2A4cPrG+Q
      EYpFOHjkEPnVUcbn57FaHVCIMnR7lpz+PotBAZtJJDa9wuyJo7RZyg7wojyXAyjZVYIpB9UG
      GWtlO2+f6ANAlDQsjVx6rBbj8sRdVktOzp7rZXXgL4Q3keyTTD7qfZbHhhiixsDpd35HNLBE
      /+cf03TwFD+VDRBEN6p8hUxBxv6DUhPWyjq8RgmQUSUTfSfeptEuAQLaUoRP+pc4cPwsVl2A
      T/4efOGO2eG2cWs0QKm95nvVq/qDvQ1EUXzmSihFlvE29nBq/6714yUNI9em6T12lJaK9R08
      tbryw78VbEIKUWJx9gF38ouElleo6zmCxylhzQ9x/fZ9bFoZyVZLY3UjYzeuMRTzozM5cQgC
      mViI8bEUc+NLVDZtskU/+rvKpQL3bl0HowO9wYj0jG5fELX0ddbwzVeXqPU7UYpadvU0PzQp
      ABqq6yu5cuMa+ToP6YJIb4sHQckyNz1BMTFHEt8mG/rTmCqaqZ/8ii8u9VPp0IG+gpq6aq7f
      uUEq4GR1NkrPBTdEn77xnLWiEvHOtwzclTGLRfSeVqprqrh6+ybFWh+FZJG2o/txvCQfMGqg
      xrr1J5MkCUEQtiXHoNfrn5lf0D18P26YCc4nQ8wsRRAECZe/Go/NhCCoFHNJFhZWkEU9/uoa
      rHqRVDTIUiiOo6IGr1XD6tIiGVmLy6pFY6vEKMdJKXqclkdxGTmXJFbQ4LbpiK8lMbsc615Z
      yhFMFPA6LSQjq6xGkhjtHqoqXJQyUYo6FxYdpBJRtCb7IxmDqrC2ukgokcPs8FLptZNMxLHZ
      12uaqkqJyOoSkWQOq7sSv9tCOrLKyloau9eNVJRwOXXEcuCyGsnFgxQMFdj0Mom1JKbv2rcB
      SjHH6vISyZyCp6oWl0VHPLRMMJbB5q3G7zQj51NEcyIeuwlVVYjHv2unSj4VY3E5iKIxUlNb
      g0FSiQaXCcUzGB0V1FQ4XtomeW9UJrhMmR/zS3aAJ15msVisLIUo8xiKoiCKW58zlWUZVVW3
      xXYmk9mU3SccwG63lxfFl3mMUCi0LVIIURTRarXbIoUwGo2b6lmecABBELZlx44yZX7Mdj5n
      m7W94XxubbKfv1+fw6wTATOHL5yh1rZBJDw6zVcLWs7seShvUFUysRVuDQyxGs9isvvoO3z4
      9a/+8BOMXvuIewtx4rE0VqcNb/1uTvS187qu9w9lRQZXtr4YsSSWEASZkrz1tnWhOIXiFuwP
      oCgyu0+8x/4606PPSgXS6SwyAiaLBZ0E+VwJSVLI5FWsxQzh+KOFGKpa5Mo3l2g4eJGjfhuZ
      RISioIBcJKeIUMiiag0YNALpVAoZCbPFjCAXkAUNOo2EKhfIyxIG3c6vCt1x5Fd09MX56F+D
      nPzNWcyAqipk02nyJRWT2YJOI1LMZ8lk8wiSFrPZhLRDV6/nFYhswy4u6/s+r2+WvuXkNldt
      4jkzweuE5+4xMB5EI+QRbR2cOuLj+ue3UIwZirYW3q5//Hg1O0da205jpQNRAIvj4WbYq0P8
      a6SAPhOmef8RrGsT3FlOQDaJpfkgbaYg43EnJ3obCY/dZELfxtEW75MNeg1YW3zArfvzyEqJ
      orma9072MDF0mfm4SqmQo6bzOD3NP715dpntYUMXUfJprn3+Nz744AM++NvnBFN5HP56fHYj
      osZMYPE++RKkkzHq9p7h7b62J8RiaiqBYncgCUXuffsJ/9f/8b9zaTQMQCytcObir2hzCQyM
      zaAVBbRmA/PDQ2gqGkgHF8kDk6EUbZU7t4LyRkyNDJIqiWg0EsHhEYJAdUMLFr0WUZGZX1x6
      1U18I9mwBxD1Zo68ffwHQ6AcA58NYNzVw36rjquXPkNRwOqqodJteqpCUXDVIARGyMv1dB+/
      gNd1ibGHv6tubMGoFVEKCrLOTs/+/UiAqNFhMRvp8pUYm50nq3qwGX9Wh7UjKKKlY3cvPqvE
      /j4JWzHIpzfn2XNoD6RWuD37+ux280tiwydKlYsEFmeYLOgBLf46F4qskksnWI5ECCUf5tEE
      npAxfIeg8dLqy3DpyiANlXZigQSm+vVTC4KAAEhGC43WEncnlqhxaCgUdbR0NeFrbmfw3/9G
      3fn/Ge0OHSNvhip/BaOTk0i1LpKJEp3dThRFJhGLEJufIalUveom/iQ6Edz6bQiDPpRCyNux
      3FKno7iJyuEbZoJz0WXuz3yXUdPT2NGKoRBlcmYFg6sKq7aAu8JHPJzC6XOuL/rIx1lMitR4
      HsnWVLnA4swU4WQOk81LQ0M1+mKcQN6Iz76unJSLGWYmJkgWJarqm6hwmFALKT7+9Aqn3zmP
      6XVyAKXI6moUT1UFGtavf2l2ilCigLOyjnq/g7WlKRbCOVwVXnQaHX7vzlyK+kvOBO9oKUQh
      HeXbrz5DW3+Y4911L20BSJnHeaMcIJFIbGo1fZk3h5WVlW3bH2C7qkL87P0BzGYzRmN526Ey
      j1hdXd02KcR2VYXQ6/U/b38ASZKQpJ2fbCrz+rOdspvNCuw2zgTLRQIz9xm4O0lB0NHS2Ud3
      W+UWbm6f5sYnXzMbS5LJFTCbjNR2HeNgZ9VrW7NlXQqRIJPJYTCbXnspRELRMZVbD1T4NFlc
      ml/OvmwbOIBKbP4uV8Yz/OrXv8NAlkAghYIKsoIoCJRkBY1GQlVkSrKCKGkepvRV5FIJBQGN
      RoMogFxSUFUFBR5+JgBmDl74Nb3JIP/qH+M3506un1lVKJXkHxwLcklGVhQEUUIjSTt2Uvx0
      KYT6cANCkDTr90iRS5RkBUFYT5DtVBFiQRWJyuvSFof0y3n4YUMHkJmfnKPn6G++F8NV1ZqB
      LFc/u4HWnmM55+Jsbz3Dg4OspXLkZCvv/OYtElODDI8tky+V8LUe4thuLX/5Pz9HX20nn0pS
      t+8cB1s9P3nmwNQwg/cXKcgF3E0HObHHzcBX37CSLqDI0HPmVzS5Xrzy8csivjzB9eExMvkS
      el8r7xzbzdiNzxkP5JAVhbZ9Z9jdsDPDoL9kNuiUC6RTBixmkXxoir/8j//G//1fPycFlLIh
      pMo+3j3dR2x5irW0gMdTgaMwxdBclPtDExhcHipcdu6M3AXAVdPBuYvvcPGtY5Ti4WecN8fo
      0AP0TjcVbhcjI7dRVAONbc1U+iqwGgrMzkW27Ca8DCbvDyEbXFRUuAjeGSEMVDXuorrSh9Os
      Y25+8VU38Y1kgx7AgMtTZDWQwV/TzO/+4OCzD+6hAlqTn9Z6N5IAhVwOq7eahjoXNDRgc6tc
      lk0019VjkQQaO01AAVGjRZJEZEFE4Fnphzz5koGG+nqskkBDuxE1Os3NyShdrXU49DlmtyF0
      tp1kizJVzXV4LRINjZ3YS2G+GpimqbsNp0XD2OrrdT2/FDboAURqd3UxffNzJuaWWJpfJi9J
      618ShO/H4F6fn8RakKIChVSQRN6Bz6sQXMuAUiIS3Tgc9ThW/D6RQDgFqkwkGqdUyKFo9GiE
      EqFAaFt3c9kO/D4vweAaoBCLRJHlPAVVi1ajEgsFSG99dcAtQ4OKUShhFEpohG2s5vYKkP7t
      3/7t3551gM7kpM5nZX5mlmhaoL23G5dJj05vxGqzIAF6qxuvSWFufomCxk1jjYuq2hoyoUVW
      oxn8NfXYTUb0eiNWmxFRlDCaTJhNj6pDCKKIyWTBYbMAAt6qGvKRJVYiKXzV9bgqKjFkgyxF
      stS2tlPlcWEz7+A5gCBiMJmwO6xIgMtXg5gJsbgaxeqvocLlw6FLM78Sw13XSpPfg81q2tDs
      qyAWWMQrJKnUZjGLW+ep25kIs1gsm1rbvqOlEGV2Br9kKcQTc4BUKrUtmbkyry+qqm5LiFZR
      FEql0rbYzuVym7L7hAPo9fpyJrjMYwiC8MxSji9id6MykT8XrVa7KbtPOIBWq0Wr/WUuVi+z
      s/jOAbaDzb7EN5RCxJfGWBWr2VX5S9qgbpvJhLkxm+JgZwMAoal7ZJxN1Ls2muTGGb2XpK27
      5plSk+zKCJNKI7urTSBnGbp6mcnVOIVCHq1Wj7ftAGd6GrboYmApmuebkcDGBz4nGo0GQRC2
      RWlqNCY2NZTf0AGy8QBB0VN2gOehmGZuJfK9A6RCK8T0tdQ/saPNj8kSWI7RsoEDlOIrLCvV
      6w4gGek9cZ4eVeGTD//MyQt/xLTFHXg0XeT2/MbS4p3F5tr73ItsU6E5rl0fIpYtYa1u5/yR
      Lq7/87+yrNgppqLonTVIuRhJxcC5ixfQx8f59Nu7IAg46/dwoq+Ju//6kCWdnmI8iqlyH+eO
      db62QrHnIZ8McuPqdQKJLBpnAxdO97Ew/CnBvI3AapZzf+giPH+Xf/11nHROZf+pc+xyy3z+
      0VdECzIao4tTb515YsuopxFbus+3Aw/I5PNUtR3lcLeXe9e+ZWI1hiyLHDr/Ho2uF99D+HXn
      uR1g7sEQiq2alioYvTVC6EAHWpOLo4cuYitM8vmVJO/89i1Gb18ln/r/2zuzrjauNQ0/JZVU
      msUoEGIQ84yxATMZjGNsJzlJd6/T56zVF913/cP6us9N98o5SSeObYix8WxmMxjMDAIkIdA8
      VPUFxk7sxMiOSexQz1pcCKRdW0W9VXvv793ft8vTkTU6v/xXXBLcGbyGx+9Eo7NxpqeHQqOW
      29evE5X/eALwLzzib74FAPY2NmksOIvn2SS7QhYVFUaWJp6wGGggGQgQzarhy38uRs8WGc5q
      ej47TXx7gaHpWap7mqiur8MXjLC1MsfyToTyow4uh5l6/BRbQQkuTZLZuQcEKr+kqLwSjW2X
      2NYME0t+SrN+fSr4j523FsD+fhBTnhWzRUNrbwd2rYY1UY+kFxFS2oNVJI2AVqNBkBOEZRGb
      8aCelcUkkUgm0Wj0GE0HtbZELbzRFfGRkll2hr9ebAHg2Z2r7GogHNxHZ3ZjMhuobe8g3yKx
      Yc2gsrQE/fNKGqJOj0YjIBlMaPASWptidCVOZUEGRkmXXtBIjrMXTpFns2AWoLW9EEN0m9tT
      87gKizBYLSyEw8f59T8ajhaAohAJ7RMI6BB1BnLy8pkPJ8ktLcC76TuwRv9i6xZKspM8nlik
      ySGwvBOno8mU5ujsj0eWw8nMfJDsumJCni2SgvzcUvJyvToeDRHwe1mdGseSXUckMIc5p4Ic
      OywEgxw5jQAQLRTliniiIqXFdrz+ANEIKHozTkcWy2sBlLcIouu0Ahbp/S+NC4IAAijy+78D
      arQa5NTRto0jI8Ehz1NujR48yrNctZyqcbA4OcKiJ4ijtJbGcifbq0vYCtyIST+rG0nc7ly8
      W+tIllxMuiQzow9Z21NoaGnDadextbiO1V2EEdhYXiS70P1KwbyPnNgeM5thqkvyAQisLxK1
      OnGYtaw/neDJ4ja2ggpO17rZ315CzHRjkwBCTN2bYD2wT0ZBJc11JYhyhJG7d9hVbJQU2DFk
      FJKteFhX8nFnv7yKFUVhcWGWQnc1Oi2k4iGmRx+xFkjirjlFRYGVlelRnm6GqShzEdHlUOOy
      p/V1/siRYNUKoXIkf2QBvDYECofDx/JlVT5ejtMKkUqljqXtWCz2blYIrVaLXq8uj6n8NhzX
      NtB3jgRLkoQkfcA2Y5XfnOPyAmk0mmPzAomi+G5eoFfZWxnnxkKKL3ubD6osKjEmhoYI59bQ
      XuNiYuQ+ZXUtmH5mFnvYgQ91s/exEfExshKiueqgQIh3cYZIRjGFGUflW9pjbjpEWc2bs25E
      PTMsKsXU5Bt/YoU4HKrkVL5fK0QEPWvy+78p6mI6NAkNRiWKRfh9NtsfKYB4xE9weYdnoVOU
      WwQSvnVmfUFsbEONi4bmtl/87OqTO6wLpbTX5r/XTn/wxPeZW9l5IYC9zWV2xfw0BBBmbdmL
      +wgBJPwrLMl5BwL4DawQMUR2OIbNOs8tQC5Bj4UPVACgpbS+mKWpJUrb3Gx6dnDmOQg/7/wP
      33/F6d4v2R79mvFtHamwHzG7nN56B3fu3mMzPsPKfCVffNGN4c0H+sMTD3l5eOcua/4gJkcV
      n3Q1sTY+gDdpZX1lj0/+XI9vdYpv/neWSEKk9fwnlGckufHtADuRJJLNQW/fubRyMu1tznH7
      /iR7sQTuum5aqrOYuneLmVUfsiDReelTiuzqXC+tSLA+s5TowhiJlIudnQC5hcUsrR1EEuOx
      KIoCsqJQ3NDBqSIztwa/R7A209F+9mQ+Afh5K8TW4hQBrYOmxjLmHo2wvFdNzLeFz1rIlS/P
      YGQbS24pvZ+3EPU8ZfjJDOXdDVTWN+JKJNmYn2BpO0rZUQdXIkyPzJLhrsatTTA5fZ+Kks9w
      uqswZEeIbkwwtrhL0SnHsZ+HD520BCBoJRw6mTXPIgF9EaVmDUuvvEej1WGzWtEIoNN9vIUs
      3hc/Z4XY93uJy07CkSiu2gZyjTo81kxqqw6KhADoJSNarQaTxYbALhHPHI/m/BTlWkmkUukt
      Uadi7OxGyMyLEU1BVX0T+piXOxNPyMx2oJUhGFQTIEPa1ck0VFZnM3T9CXnFjrTTImq1sB/Y
      IxaL88fKJfBuZObmochaqmvrKLCZUcTD/Jgv/w3JRJx4LML89ARGm4P97U0y3bVUlxUgJ9Ic
      J4tmXNlaEsY86mqrsBsFoqEQijmb+tpK9EKct114EVCO7ef3NIMdeas2ZhWSL+qQMmpprE5S
      nG1Dl5BxF5kBcFfUoNdCRn4pyvNBvquwBEkUsLgb8WwP893NAFf62zgxI07JTo375anNcJUi
      WSXyClppTj7i6jffkFFcS0eJBtlZivhigcVMji3ItW+vkl1UT/cpN6LszN0txAAADBtJREFU
      4NngAIMrGVQ0tGDINKKX3ZS9ZuYRKKuoQdQA6GjovcTY/dt8PZugsuksriI7pd77XL02RG11
      M/VS+vXWMghzSuP7lSfldV5Ggn+/p5FqhVA5khNlhYhGo8TTqK2kcnL4GK0QiUTi3awQiqIc
      SzEEFZXfknQHNq8JwGg0qhViVH7CcVohtFrtsbSt1+vfjxUiuDHNjQdzIGjJL6unuab4V5Ur
      3VlfIGUuIM+eXlgsGd/j3sAg3ucbofKr22ir+sDjCtFdbt+5h3f/oNN5ZadpqX/zRvcPGVk0
      EDO//6QI8mFqxLdMcakPbf9SRd635mgB+DYxlZyhqyKD2TvXuSca6K56972k3vVnRB3ZaQsg
      FY+QkJxc7Kk/qCcsfgRrSbEAAamA/vaD3btaUffRVrsBkEWJuPTLtRzelRczzbe0buhDO7yv
      pdOjI1aCgF4vYTSZqaktYdATQ05GeTp+n4kFD6LVSU/PWQzRbYaH7+ENJYnq7PzLlT5WRq9j
      r7tCgVXm1s0BznT0vWg2FfUx+P0g3kgKe34Z3R2n2Z28xY45m8Un63Rf7CHHfHCxa0U9RqPx
      herjwS0Grv1AICFQXHuWllID1249gliYQFRLa99FSo1BhqY92CKb+E3lnC01cv/+I3b24+RV
      naGrsZCxgf9jbjuCJbeYcx0teKZu8Xjeg97q5FxPO+bENjdv3sUflXFWNNPeVI5em96957DP
      h0T9qwwO3WMvJlBU30ZHbRZDX31PQCsTjmppbO+lxqXj4Q9jKLoQPk0hvdUWbg8/xBtOUFLb
      zunKLMaHB5n3BDHlVXCxswHP1F3uzW6glaz09H+KLbHB7Vt32QmlyCyqpa+9DvGEeRHfhqMF
      IKfw+zysrUZYeeqhpMZNyL/Gs21obe9gZ+YBY4tecr2j5DT0caHIxtX/+zuJlEI0vIdRBhSF
      YGgf+UdjMkErUdnUSpWgMDf5mM3deoT9bZ7umrl0+TxWw2HXZJbGh1hfn0EAylsuUCGtE7OU
      c+lsBVo0CPIeCdFO/4V+lP2n3Lg3g6szj/WFWTJbe+lxO5i68x0mZzVtlTKjd0fYrsliY1uh
      88Il7JKAXokzt75HV18/NkmHXlKYvz9GXsslLubpuXv9Oqu+fMpyLWmd2PUnw/xtcRSAksYe
      ithE76jgUm0pGo0WkEkqJrr6+5D21rg6MkmNq4mVp7OU9vVzoSSH6ZsDWMsaqZCSjI8+ZDOj
      jY2wyPmLl5FEDTpNgo2VXRq6L1BkFdGKMDc2QU5tN71FdiYHv2J6p4qGXDUy/0uksSk+hW9z
      hWuj05Rc+Dcq8qx4F6bwegOsLi+D0UFhpsjuigl3YQaCkF6FvvDWPA/Ht3FkGvHuhXDEYphF
      I42nmrEZfnzL0lDSeI7u7qYXT4BUwkj5xgRjD24jm0voqrGjN1owiFrIKMCUekRSycNeWEN9
      qQMB2NlaJx41ktjXklvmxoSNpuYiFp+MEoxCS1cX7c3VTM1MENxP0tDZhN+npdJpQSMIOOxW
      IvEYkJ4ACmo7udxW9eJ1MmrCO/WEkQd3kK3FfNLmQm8wI+lFjBY7GmEZgOyCcqpKC9DJQTY8
      PrS6DRIC5BRXkJmZTVN5PnMTo+zGBHp6Oqk+U8P0s2mW/LvUnLtCMBqjKNOOVtThdmXw0B+F
      NEV7Ejn6StXqKW9o5d//8z+ITA8zvxXEbM9Fp9dxqq2D03UlmPRmTKYgC4s+UtE9tnwHedk1
      gkAsFiPkXWJ156fpPPyrK7iau2htrET/YnaoQZPGBDsZ3MNa1sC5cz3gm2c/DnIqSUqWWZt8
      SDy7BIPmQIiHreVkZmHOdXO2vY1yRzYa3T4JbQHtXd2UZCZY8+yxLxvo6OqhNk9iwxvD6ZKZ
      nvKQSgRZ2PRiM5nf4tT+lHA4RJ67kXOdLfi31gCQUylkOcnG8jzi88isRqPhYLJjoChHQpNd
      Tkd7G+58G6lEEsGUQ2fPOZyE2YkECMdNnG7vpLvWzvQzP9lWE4sr68RjYR5N71DqfPc+nwSO
      jATvbcyxJTipyLeQivgZnVymorGO2PoTbj2aRbS76OpqxUqIB8NDrIeNpOQg/Rc/Qxde5ebt
      x2gy3ORmijTUN7K7NkvCWoLTFOWH728QkvIocVrIcVWj9y8gu+rI/dGiQDK2y+A33+JLHGjV
      Vd9Fm9vI/dvDrO+laOjopdoW4W9fDyBqdVgLauhtq0NK7jG1GaHO7QRAjgcZvXubha0wzqpm
      2htdzD8YZmJphxx3Ix3NpezMj3F3fAGLs5Ku1gYMxJi4d5NZT4ymzvNUOW3pBW0iXq4NDOEL
      HkzznJVnOVNu5PHd+2wGoeHsOaoLtPzjv/6bsM2OPbeU7o5mzLoE81NrFNeVoUMhFQ8zMvwD
      z3ZilNS1cKoil8Xxe4wvbJNfdZqzDcXszE9wf2Iejb2Yi+dbMSgRJu4PM7cRovJMFw0lOb+6
      mubjkREikQ8pEqwcuQr0m2eF2F6cYH47jqRJsOqN03+h+4XD8dgJbvDdhJfLHQ2/zfHeC0Fu
      fzdO8+XO49hq8l45UVaIeDz+Ttl6ddYcbPse4rKO1pYa5HiE0G/lqJAN1JU4CIU+JouvTGmd
      m1QoxMfU6/fJcboOksn0qsi99gQIhUJqWhSVn+D1esnOzn7v7SqKgqIox1IjIJlMIopHr/G8
      9g6z2YzZrE6cVF4SDoePRQCpVApFUdK6UN+WeDyeVnqfjzlAqaLyq1EjJCq/G8dVHglIu8yX
      KgCV343jzBeVbtvqEEjlRKM+AVTS5tWQkcCBJ/Pgbqu82Gj/2t1XUV54Nw//9pO2BAHh8POC
      wI8aemPA6+dCWId9+nHb/ChDofJK26oAVNIjFWV86DqTniCKYqDv888oYJurU34ut9cR9y/w
      9fAGly91v5KZTmFzYYzBoQfkn/mM840FQILHA98wtxUFrYFzlz/DZfMxeHWL7suNxLcX+PbB
      Bv/0+bk3XqBBzxwDwxPEUikSKQN9n18mS/Fx/fsfCKYE9FllfHb+DN61SbxRB/VVuTy7d5U1
      WzPdtXmqAFTSZ397FY/WyV//0kzcM8rA6BJ5pw5i2HIywq2bk7T2XcGoe+WeHQ/gT9hpPlWF
      9/BXnhnWdVX8+S9VhDwz3B+bwXUu96Ct6C4PH8/Q2tl/5MUpmR30fvoFNoOO9ZFrLG6FiOxN
      4TjVz6dlGYzd+I7F3SiHW3livgXG/VautOS+GPurcwCVtAhHwmTYcxA1Aqb8IiT/NnEgsuth
      5NYAYmUbBVb960MWfQa1NW6sxpePhT2vn1xXHjqtBrM9DyW5C0DIv8nDu/fQFZ2iKPPoNXy9
      NQObQUfIv84Tj0JprpnQfpjc3CwEQUOh04h3LwlyEs/yHNeHZjnb04YkvrzsVQGopM3Lsb3A
      oWk3lYgRCIQQ9bq0tykqivBTg97zF6lEjGAwhDbNwJgip9heHOPG8BNqz54jzyoBB3XH4MCN
      fDDil4mFQ4TiKXSvbGhSBaCSFkZJIhD0oygKCd8mIUsmesCSW8z5zz8nODrAyl4irYxztkwL
      O5t+UopCLOzncI+FzVFC78U+gnN3WfIdXQ1zf2ueh/MxLn3ajyvLiCCA0STh9+2jKLC5FSXT
      qgWNnuKaZv7UV82N728TT770H6lzAJW0sOUVk/HkGv/zj2USoTidn/4JLTsAaEQzn1zq5O+D
      N7H1nyfD8PKySgQ2uPVgjK31JfypZQJ7NXzaVUfO5D/46qspUvEkrf2fA34AtIZMurpPc3Xw
      Jjlf9GN5QyaB5akHeHxWbnz3DQBVLX24Kmq5dv071iYlotps/pRpxPe8Iqwpp5Ju9yZDj5/R
      21qOTlAzw6mkwcrKCkVFRcjJBJFoFEGUMEo6BEUmnlLQ60RAIR6LodUd1Ik+REklCEWiL58M
      Gh0Wk4SSShCJxtGIegwGPQIy8biMTi+CopCIxdFKEm/agp2IhYnGUy9eS0Yzeq1AIh4lGk8h
      GU3oRA1KKomsaBBFDYqcIpaQkfQHtatVAagcyaEA/oiocwCVE40qAJUTjSoAlRONKgCVE40q
      AJUTjSoAlRONKgCVE40qAJUTjSoAlRONKgCVE40qAJUTjSoAlRONKgCVE40qAJUTjSoAlRON
      KgCVE40qAJUTjSoAlRPN/wPNj7mMz91gAgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='167' name='Profit per Product Type with Marketing spendings' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ROI per Product' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
